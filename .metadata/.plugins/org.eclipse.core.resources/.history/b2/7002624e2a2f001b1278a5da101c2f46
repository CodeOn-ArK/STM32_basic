/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
 * All rights reserved.</center></h2>
 *
 * This software component is licensed by ST under BSD 3-Clause license,
 * the "License"; You may not use this file except in compliance with the
 * License. You may obtain a copy of the License at:
 *                        opensource.org/licenses/BSD-3-Clause
 *
 ******************************************************************************
 */
/*
 * THIS PROJECT IS USING BIT MANIPULATION TO IMPLEMENT THE APPLICATION
 * NESTED STRUCTURE WILL BE USED IN FUTURE VERSIONS
 */
#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

#include<stdio.h>
#include<stdint.h>

int main(void)
{
	//IMPLEMENTATION: STEP 1
	//choose the IO which are to be used for the application

	//IMPLEMENTATION: STEP 2
	//create required pointer variables to handle memory mapped registers
	//initialize the pointer variables with appropriate memory mapped
	//registers addresses
	//use type qualifier such as volatile or const if memory mapped register
	//access is involved
	//REGISTERS TO BE INITIALIZED : RCCAHB1ENR, GPIOAMODER, GPIOAIPR. GPIOAOPR, GPIOAPUDR

	//IMPLEMENTATION: STEP 3
	//make all row IOs mode as O/P
	//make all column IOs mode as I/P
	//activate internal pull-up resistors for column IOs

	//IMPLEMENTATION: STEP 4
	//implement the key detect logic as per the flow chart

    /* Loop forever */
	for(;;);
}
