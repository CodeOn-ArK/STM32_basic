
008button_ISR.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001218  080001d0  080001d0  000101d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000b4  080013e8  080013e8  000113e8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800149c  0800149c  0002007c  2**0
                  CONTENTS
  4 .ARM          00000000  0800149c  0800149c  0002007c  2**0
                  CONTENTS
  5 .preinit_array 00000000  0800149c  0800149c  0002007c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800149c  0800149c  0001149c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080014a0  080014a0  000114a0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         0000007c  20000000  080014a4  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000034  2000007c  08001520  0002007c  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200000b0  08001520  000200b0  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  0002007c  2**0
                  CONTENTS, READONLY
 12 .debug_info   00002250  00000000  00000000  000200a6  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 000005d3  00000000  00000000  000222f6  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 00000128  00000000  00000000  000228d0  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 000000f0  00000000  00000000  000229f8  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  00002af7  00000000  00000000  00022ae8  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   0000123b  00000000  00000000  000255df  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    00009189  00000000  00000000  0002681a  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  0002f9a3  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000aac  00000000  00000000  0002fa20  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	; (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	; (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	; (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	2000007c 	.word	0x2000007c
 80001ec:	00000000 	.word	0x00000000
 80001f0:	080013d0 	.word	0x080013d0

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	; (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	; (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	; (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	20000080 	.word	0x20000080
 800020c:	080013d0 	.word	0x080013d0

08000210 <memchr>:
 8000210:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000214:	2a10      	cmp	r2, #16
 8000216:	db2b      	blt.n	8000270 <memchr+0x60>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	d008      	beq.n	8000230 <memchr+0x20>
 800021e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000222:	3a01      	subs	r2, #1
 8000224:	428b      	cmp	r3, r1
 8000226:	d02d      	beq.n	8000284 <memchr+0x74>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	b342      	cbz	r2, 8000280 <memchr+0x70>
 800022e:	d1f6      	bne.n	800021e <memchr+0xe>
 8000230:	b4f0      	push	{r4, r5, r6, r7}
 8000232:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000236:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800023a:	f022 0407 	bic.w	r4, r2, #7
 800023e:	f07f 0700 	mvns.w	r7, #0
 8000242:	2300      	movs	r3, #0
 8000244:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000248:	3c08      	subs	r4, #8
 800024a:	ea85 0501 	eor.w	r5, r5, r1
 800024e:	ea86 0601 	eor.w	r6, r6, r1
 8000252:	fa85 f547 	uadd8	r5, r5, r7
 8000256:	faa3 f587 	sel	r5, r3, r7
 800025a:	fa86 f647 	uadd8	r6, r6, r7
 800025e:	faa5 f687 	sel	r6, r5, r7
 8000262:	b98e      	cbnz	r6, 8000288 <memchr+0x78>
 8000264:	d1ee      	bne.n	8000244 <memchr+0x34>
 8000266:	bcf0      	pop	{r4, r5, r6, r7}
 8000268:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800026c:	f002 0207 	and.w	r2, r2, #7
 8000270:	b132      	cbz	r2, 8000280 <memchr+0x70>
 8000272:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000276:	3a01      	subs	r2, #1
 8000278:	ea83 0301 	eor.w	r3, r3, r1
 800027c:	b113      	cbz	r3, 8000284 <memchr+0x74>
 800027e:	d1f8      	bne.n	8000272 <memchr+0x62>
 8000280:	2000      	movs	r0, #0
 8000282:	4770      	bx	lr
 8000284:	3801      	subs	r0, #1
 8000286:	4770      	bx	lr
 8000288:	2d00      	cmp	r5, #0
 800028a:	bf06      	itte	eq
 800028c:	4635      	moveq	r5, r6
 800028e:	3803      	subeq	r0, #3
 8000290:	3807      	subne	r0, #7
 8000292:	f015 0f01 	tst.w	r5, #1
 8000296:	d107      	bne.n	80002a8 <memchr+0x98>
 8000298:	3001      	adds	r0, #1
 800029a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800029e:	bf02      	ittt	eq
 80002a0:	3001      	addeq	r0, #1
 80002a2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 80002a6:	3001      	addeq	r0, #1
 80002a8:	bcf0      	pop	{r4, r5, r6, r7}
 80002aa:	3801      	subs	r0, #1
 80002ac:	4770      	bx	lr
 80002ae:	bf00      	nop

080002b0 <main>:
uint32_t volatile *pEXTTIEdgeCtrlReg		= (uint32_t*) (0x40013C00 + 0x08);
uint32_t volatile *pNVICIRQEnReg 			= (uint32_t*) 0xE000E100;


int main(void)
{
 80002b0:	b580      	push	{r7, lr}
 80002b2:	b082      	sub	sp, #8
 80002b4:	af00      	add	r7, sp, #0
	button_init();
 80002b6:	f000 f839 	bl	800032c <button_init>

	while(1)
	{
		//Disable interrupt
		*pEXTIMaskReg &= ~( 1 << 0);
 80002ba:	4b17      	ldr	r3, [pc, #92]	; (8000318 <main+0x68>)
 80002bc:	681b      	ldr	r3, [r3, #0]
 80002be:	681a      	ldr	r2, [r3, #0]
 80002c0:	4b15      	ldr	r3, [pc, #84]	; (8000318 <main+0x68>)
 80002c2:	681b      	ldr	r3, [r3, #0]
 80002c4:	f022 0201 	bic.w	r2, r2, #1
 80002c8:	601a      	str	r2, [r3, #0]

		if(g_button_pressed){
 80002ca:	4b14      	ldr	r3, [pc, #80]	; (800031c <main+0x6c>)
 80002cc:	781b      	ldrb	r3, [r3, #0]
 80002ce:	b2db      	uxtb	r3, r3
 80002d0:	2b00      	cmp	r3, #0
 80002d2:	d017      	beq.n	8000304 <main+0x54>
			//Some delay until button debouncing gets over
			for(uint32_t volatile i=0;i<500000/2;i++);
 80002d4:	2300      	movs	r3, #0
 80002d6:	607b      	str	r3, [r7, #4]
 80002d8:	e002      	b.n	80002e0 <main+0x30>
 80002da:	687b      	ldr	r3, [r7, #4]
 80002dc:	3301      	adds	r3, #1
 80002de:	607b      	str	r3, [r7, #4]
 80002e0:	687b      	ldr	r3, [r7, #4]
 80002e2:	4a0f      	ldr	r2, [pc, #60]	; (8000320 <main+0x70>)
 80002e4:	4293      	cmp	r3, r2
 80002e6:	d9f8      	bls.n	80002da <main+0x2a>
			g_button_press_count++;
 80002e8:	4b0e      	ldr	r3, [pc, #56]	; (8000324 <main+0x74>)
 80002ea:	681b      	ldr	r3, [r3, #0]
 80002ec:	3301      	adds	r3, #1
 80002ee:	4a0d      	ldr	r2, [pc, #52]	; (8000324 <main+0x74>)
 80002f0:	6013      	str	r3, [r2, #0]
			printf("Button is pressed : %lu\n",g_button_press_count);
 80002f2:	4b0c      	ldr	r3, [pc, #48]	; (8000324 <main+0x74>)
 80002f4:	681b      	ldr	r3, [r3, #0]
 80002f6:	4619      	mov	r1, r3
 80002f8:	480b      	ldr	r0, [pc, #44]	; (8000328 <main+0x78>)
 80002fa:	f000 f987 	bl	800060c <iprintf>
			g_button_pressed = 0;
 80002fe:	4b07      	ldr	r3, [pc, #28]	; (800031c <main+0x6c>)
 8000300:	2200      	movs	r2, #0
 8000302:	701a      	strb	r2, [r3, #0]
		}

		//Enable interrupt
		*pEXTIMaskReg |= ( 1 << 0);
 8000304:	4b04      	ldr	r3, [pc, #16]	; (8000318 <main+0x68>)
 8000306:	681b      	ldr	r3, [r3, #0]
 8000308:	681a      	ldr	r2, [r3, #0]
 800030a:	4b03      	ldr	r3, [pc, #12]	; (8000318 <main+0x68>)
 800030c:	681b      	ldr	r3, [r3, #0]
 800030e:	f042 0201 	orr.w	r2, r2, #1
 8000312:	601a      	str	r2, [r3, #0]
		*pEXTIMaskReg &= ~( 1 << 0);
 8000314:	e7d1      	b.n	80002ba <main+0xa>
 8000316:	bf00      	nop
 8000318:	2000000c 	.word	0x2000000c
 800031c:	20000098 	.word	0x20000098
 8000320:	0003d08f 	.word	0x0003d08f
 8000324:	2000009c 	.word	0x2000009c
 8000328:	080013e8 	.word	0x080013e8

0800032c <button_init>:

}


void button_init(void)
{
 800032c:	b480      	push	{r7}
 800032e:	af00      	add	r7, sp, #0

  *pClkCtrlReg |= ( 1 << 0);
 8000330:	4b15      	ldr	r3, [pc, #84]	; (8000388 <button_init+0x5c>)
 8000332:	681b      	ldr	r3, [r3, #0]
 8000334:	681a      	ldr	r2, [r3, #0]
 8000336:	4b14      	ldr	r3, [pc, #80]	; (8000388 <button_init+0x5c>)
 8000338:	681b      	ldr	r3, [r3, #0]
 800033a:	f042 0201 	orr.w	r2, r2, #1
 800033e:	601a      	str	r2, [r3, #0]

  *pClkCtrlRegApb2 |= ( 1 << 14);
 8000340:	4b12      	ldr	r3, [pc, #72]	; (800038c <button_init+0x60>)
 8000342:	681b      	ldr	r3, [r3, #0]
 8000344:	681a      	ldr	r2, [r3, #0]
 8000346:	4b11      	ldr	r3, [pc, #68]	; (800038c <button_init+0x60>)
 8000348:	681b      	ldr	r3, [r3, #0]
 800034a:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 800034e:	601a      	str	r2, [r3, #0]

  *pEXTTIEdgeCtrlReg |= ( 1 << 0);
 8000350:	4b0f      	ldr	r3, [pc, #60]	; (8000390 <button_init+0x64>)
 8000352:	681b      	ldr	r3, [r3, #0]
 8000354:	681a      	ldr	r2, [r3, #0]
 8000356:	4b0e      	ldr	r3, [pc, #56]	; (8000390 <button_init+0x64>)
 8000358:	681b      	ldr	r3, [r3, #0]
 800035a:	f042 0201 	orr.w	r2, r2, #1
 800035e:	601a      	str	r2, [r3, #0]

  *pEXTIMaskReg |= ( 1 << 0);
 8000360:	4b0c      	ldr	r3, [pc, #48]	; (8000394 <button_init+0x68>)
 8000362:	681b      	ldr	r3, [r3, #0]
 8000364:	681a      	ldr	r2, [r3, #0]
 8000366:	4b0b      	ldr	r3, [pc, #44]	; (8000394 <button_init+0x68>)
 8000368:	681b      	ldr	r3, [r3, #0]
 800036a:	f042 0201 	orr.w	r2, r2, #1
 800036e:	601a      	str	r2, [r3, #0]

  *pNVICIRQEnReg |= ( 1 << 6);
 8000370:	4b09      	ldr	r3, [pc, #36]	; (8000398 <button_init+0x6c>)
 8000372:	681b      	ldr	r3, [r3, #0]
 8000374:	681a      	ldr	r2, [r3, #0]
 8000376:	4b08      	ldr	r3, [pc, #32]	; (8000398 <button_init+0x6c>)
 8000378:	681b      	ldr	r3, [r3, #0]
 800037a:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800037e:	601a      	str	r2, [r3, #0]

}
 8000380:	bf00      	nop
 8000382:	46bd      	mov	sp, r7
 8000384:	bc80      	pop	{r7}
 8000386:	4770      	bx	lr
 8000388:	20000004 	.word	0x20000004
 800038c:	20000008 	.word	0x20000008
 8000390:	20000010 	.word	0x20000010
 8000394:	2000000c 	.word	0x2000000c
 8000398:	20000014 	.word	0x20000014

0800039c <EXTI0_IRQHandler>:

/* This is button interrupt handler*/
void EXTI0_IRQHandler(void)
{
 800039c:	b480      	push	{r7}
 800039e:	af00      	add	r7, sp, #0
	//Make this flag SET . if button pressed
  g_button_pressed = 1;
 80003a0:	4b07      	ldr	r3, [pc, #28]	; (80003c0 <EXTI0_IRQHandler+0x24>)
 80003a2:	2201      	movs	r2, #1
 80003a4:	701a      	strb	r2, [r3, #0]

  *pEXTTIPendReg |= ( 1 << 0);
 80003a6:	4b07      	ldr	r3, [pc, #28]	; (80003c4 <EXTI0_IRQHandler+0x28>)
 80003a8:	681b      	ldr	r3, [r3, #0]
 80003aa:	681a      	ldr	r2, [r3, #0]
 80003ac:	4b05      	ldr	r3, [pc, #20]	; (80003c4 <EXTI0_IRQHandler+0x28>)
 80003ae:	681b      	ldr	r3, [r3, #0]
 80003b0:	f042 0201 	orr.w	r2, r2, #1
 80003b4:	601a      	str	r2, [r3, #0]
}
 80003b6:	bf00      	nop
 80003b8:	46bd      	mov	sp, r7
 80003ba:	bc80      	pop	{r7}
 80003bc:	4770      	bx	lr
 80003be:	bf00      	nop
 80003c0:	20000098 	.word	0x20000098
 80003c4:	20000000 	.word	0x20000000

080003c8 <ITM_SendChar>:
/* ITM register addresses */
#define ITM_STIMULUS_PORT0   	*((volatile uint32_t*) 0xE0000000 )
#define ITM_TRACE_EN          	*((volatile uint32_t*) 0xE0000E00 )

void ITM_SendChar(uint8_t ch)
{
 80003c8:	b480      	push	{r7}
 80003ca:	b083      	sub	sp, #12
 80003cc:	af00      	add	r7, sp, #0
 80003ce:	4603      	mov	r3, r0
 80003d0:	71fb      	strb	r3, [r7, #7]

	//Enable TRCENA
	DEMCR |= ( 1 << 24);
 80003d2:	4b0e      	ldr	r3, [pc, #56]	; (800040c <ITM_SendChar+0x44>)
 80003d4:	681b      	ldr	r3, [r3, #0]
 80003d6:	4a0d      	ldr	r2, [pc, #52]	; (800040c <ITM_SendChar+0x44>)
 80003d8:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80003dc:	6013      	str	r3, [r2, #0]

	//enable stimulus port 0
	ITM_TRACE_EN |= ( 1 << 0);
 80003de:	4b0c      	ldr	r3, [pc, #48]	; (8000410 <ITM_SendChar+0x48>)
 80003e0:	681b      	ldr	r3, [r3, #0]
 80003e2:	4a0b      	ldr	r2, [pc, #44]	; (8000410 <ITM_SendChar+0x48>)
 80003e4:	f043 0301 	orr.w	r3, r3, #1
 80003e8:	6013      	str	r3, [r2, #0]

	// read FIFO status in bit [0]:
	while(!(ITM_STIMULUS_PORT0 & 1));
 80003ea:	bf00      	nop
 80003ec:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 80003f0:	681b      	ldr	r3, [r3, #0]
 80003f2:	f003 0301 	and.w	r3, r3, #1
 80003f6:	2b00      	cmp	r3, #0
 80003f8:	d0f8      	beq.n	80003ec <ITM_SendChar+0x24>

	//Write to ITM stimulus port0
	ITM_STIMULUS_PORT0 = ch;
 80003fa:	f04f 4260 	mov.w	r2, #3758096384	; 0xe0000000
 80003fe:	79fb      	ldrb	r3, [r7, #7]
 8000400:	6013      	str	r3, [r2, #0]
}
 8000402:	bf00      	nop
 8000404:	370c      	adds	r7, #12
 8000406:	46bd      	mov	sp, r7
 8000408:	bc80      	pop	{r7}
 800040a:	4770      	bx	lr
 800040c:	e000edfc 	.word	0xe000edfc
 8000410:	e0000e00 	.word	0xe0000e00

08000414 <_read>:
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000414:	b580      	push	{r7, lr}
 8000416:	b086      	sub	sp, #24
 8000418:	af00      	add	r7, sp, #0
 800041a:	60f8      	str	r0, [r7, #12]
 800041c:	60b9      	str	r1, [r7, #8]
 800041e:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000420:	2300      	movs	r3, #0
 8000422:	617b      	str	r3, [r7, #20]
 8000424:	e00a      	b.n	800043c <_read+0x28>
	{
		*ptr++ = __io_getchar();
 8000426:	f3af 8000 	nop.w
 800042a:	4601      	mov	r1, r0
 800042c:	68bb      	ldr	r3, [r7, #8]
 800042e:	1c5a      	adds	r2, r3, #1
 8000430:	60ba      	str	r2, [r7, #8]
 8000432:	b2ca      	uxtb	r2, r1
 8000434:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000436:	697b      	ldr	r3, [r7, #20]
 8000438:	3301      	adds	r3, #1
 800043a:	617b      	str	r3, [r7, #20]
 800043c:	697a      	ldr	r2, [r7, #20]
 800043e:	687b      	ldr	r3, [r7, #4]
 8000440:	429a      	cmp	r2, r3
 8000442:	dbf0      	blt.n	8000426 <_read+0x12>
	}

return len;
 8000444:	687b      	ldr	r3, [r7, #4]
}
 8000446:	4618      	mov	r0, r3
 8000448:	3718      	adds	r7, #24
 800044a:	46bd      	mov	sp, r7
 800044c:	bd80      	pop	{r7, pc}

0800044e <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800044e:	b580      	push	{r7, lr}
 8000450:	b086      	sub	sp, #24
 8000452:	af00      	add	r7, sp, #0
 8000454:	60f8      	str	r0, [r7, #12]
 8000456:	60b9      	str	r1, [r7, #8]
 8000458:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800045a:	2300      	movs	r3, #0
 800045c:	617b      	str	r3, [r7, #20]
 800045e:	e009      	b.n	8000474 <_write+0x26>
	{
		//__io_putchar(*ptr++);
		ITM_SendChar(*ptr++);
 8000460:	68bb      	ldr	r3, [r7, #8]
 8000462:	1c5a      	adds	r2, r3, #1
 8000464:	60ba      	str	r2, [r7, #8]
 8000466:	781b      	ldrb	r3, [r3, #0]
 8000468:	4618      	mov	r0, r3
 800046a:	f7ff ffad 	bl	80003c8 <ITM_SendChar>
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800046e:	697b      	ldr	r3, [r7, #20]
 8000470:	3301      	adds	r3, #1
 8000472:	617b      	str	r3, [r7, #20]
 8000474:	697a      	ldr	r2, [r7, #20]
 8000476:	687b      	ldr	r3, [r7, #4]
 8000478:	429a      	cmp	r2, r3
 800047a:	dbf1      	blt.n	8000460 <_write+0x12>
	}
	return len;
 800047c:	687b      	ldr	r3, [r7, #4]
}
 800047e:	4618      	mov	r0, r3
 8000480:	3718      	adds	r7, #24
 8000482:	46bd      	mov	sp, r7
 8000484:	bd80      	pop	{r7, pc}

08000486 <_close>:

int _close(int file)
{
 8000486:	b480      	push	{r7}
 8000488:	b083      	sub	sp, #12
 800048a:	af00      	add	r7, sp, #0
 800048c:	6078      	str	r0, [r7, #4]
	return -1;
 800048e:	f04f 33ff 	mov.w	r3, #4294967295
}
 8000492:	4618      	mov	r0, r3
 8000494:	370c      	adds	r7, #12
 8000496:	46bd      	mov	sp, r7
 8000498:	bc80      	pop	{r7}
 800049a:	4770      	bx	lr

0800049c <_fstat>:


int _fstat(int file, struct stat *st)
{
 800049c:	b480      	push	{r7}
 800049e:	b083      	sub	sp, #12
 80004a0:	af00      	add	r7, sp, #0
 80004a2:	6078      	str	r0, [r7, #4]
 80004a4:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 80004a6:	683b      	ldr	r3, [r7, #0]
 80004a8:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80004ac:	605a      	str	r2, [r3, #4]
	return 0;
 80004ae:	2300      	movs	r3, #0
}
 80004b0:	4618      	mov	r0, r3
 80004b2:	370c      	adds	r7, #12
 80004b4:	46bd      	mov	sp, r7
 80004b6:	bc80      	pop	{r7}
 80004b8:	4770      	bx	lr

080004ba <_isatty>:

int _isatty(int file)
{
 80004ba:	b480      	push	{r7}
 80004bc:	b083      	sub	sp, #12
 80004be:	af00      	add	r7, sp, #0
 80004c0:	6078      	str	r0, [r7, #4]
	return 1;
 80004c2:	2301      	movs	r3, #1
}
 80004c4:	4618      	mov	r0, r3
 80004c6:	370c      	adds	r7, #12
 80004c8:	46bd      	mov	sp, r7
 80004ca:	bc80      	pop	{r7}
 80004cc:	4770      	bx	lr

080004ce <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80004ce:	b480      	push	{r7}
 80004d0:	b085      	sub	sp, #20
 80004d2:	af00      	add	r7, sp, #0
 80004d4:	60f8      	str	r0, [r7, #12]
 80004d6:	60b9      	str	r1, [r7, #8]
 80004d8:	607a      	str	r2, [r7, #4]
	return 0;
 80004da:	2300      	movs	r3, #0
}
 80004dc:	4618      	mov	r0, r3
 80004de:	3714      	adds	r7, #20
 80004e0:	46bd      	mov	sp, r7
 80004e2:	bc80      	pop	{r7}
 80004e4:	4770      	bx	lr
	...

080004e8 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80004e8:	b580      	push	{r7, lr}
 80004ea:	b086      	sub	sp, #24
 80004ec:	af00      	add	r7, sp, #0
 80004ee:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80004f0:	4a14      	ldr	r2, [pc, #80]	; (8000544 <_sbrk+0x5c>)
 80004f2:	4b15      	ldr	r3, [pc, #84]	; (8000548 <_sbrk+0x60>)
 80004f4:	1ad3      	subs	r3, r2, r3
 80004f6:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80004f8:	697b      	ldr	r3, [r7, #20]
 80004fa:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initalize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80004fc:	4b13      	ldr	r3, [pc, #76]	; (800054c <_sbrk+0x64>)
 80004fe:	681b      	ldr	r3, [r3, #0]
 8000500:	2b00      	cmp	r3, #0
 8000502:	d102      	bne.n	800050a <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000504:	4b11      	ldr	r3, [pc, #68]	; (800054c <_sbrk+0x64>)
 8000506:	4a12      	ldr	r2, [pc, #72]	; (8000550 <_sbrk+0x68>)
 8000508:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 800050a:	4b10      	ldr	r3, [pc, #64]	; (800054c <_sbrk+0x64>)
 800050c:	681a      	ldr	r2, [r3, #0]
 800050e:	687b      	ldr	r3, [r7, #4]
 8000510:	4413      	add	r3, r2
 8000512:	693a      	ldr	r2, [r7, #16]
 8000514:	429a      	cmp	r2, r3
 8000516:	d207      	bcs.n	8000528 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000518:	f000 f846 	bl	80005a8 <__errno>
 800051c:	4602      	mov	r2, r0
 800051e:	230c      	movs	r3, #12
 8000520:	6013      	str	r3, [r2, #0]
    return (void *)-1;
 8000522:	f04f 33ff 	mov.w	r3, #4294967295
 8000526:	e009      	b.n	800053c <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000528:	4b08      	ldr	r3, [pc, #32]	; (800054c <_sbrk+0x64>)
 800052a:	681b      	ldr	r3, [r3, #0]
 800052c:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800052e:	4b07      	ldr	r3, [pc, #28]	; (800054c <_sbrk+0x64>)
 8000530:	681a      	ldr	r2, [r3, #0]
 8000532:	687b      	ldr	r3, [r7, #4]
 8000534:	4413      	add	r3, r2
 8000536:	4a05      	ldr	r2, [pc, #20]	; (800054c <_sbrk+0x64>)
 8000538:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800053a:	68fb      	ldr	r3, [r7, #12]
}
 800053c:	4618      	mov	r0, r3
 800053e:	3718      	adds	r7, #24
 8000540:	46bd      	mov	sp, r7
 8000542:	bd80      	pop	{r7, pc}
 8000544:	20020000 	.word	0x20020000
 8000548:	00000400 	.word	0x00000400
 800054c:	200000a0 	.word	0x200000a0
 8000550:	200000b0 	.word	0x200000b0

08000554 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000554:	480d      	ldr	r0, [pc, #52]	; (800058c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000556:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 8000558:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800055c:	480c      	ldr	r0, [pc, #48]	; (8000590 <LoopForever+0x6>)
  ldr r1, =_edata
 800055e:	490d      	ldr	r1, [pc, #52]	; (8000594 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000560:	4a0d      	ldr	r2, [pc, #52]	; (8000598 <LoopForever+0xe>)
  movs r3, #0
 8000562:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000564:	e002      	b.n	800056c <LoopCopyDataInit>

08000566 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000566:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000568:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800056a:	3304      	adds	r3, #4

0800056c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800056c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800056e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000570:	d3f9      	bcc.n	8000566 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000572:	4a0a      	ldr	r2, [pc, #40]	; (800059c <LoopForever+0x12>)
  ldr r4, =_ebss
 8000574:	4c0a      	ldr	r4, [pc, #40]	; (80005a0 <LoopForever+0x16>)
  movs r3, #0
 8000576:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000578:	e001      	b.n	800057e <LoopFillZerobss>

0800057a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800057a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800057c:	3204      	adds	r2, #4

0800057e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800057e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000580:	d3fb      	bcc.n	800057a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000582:	f000 f817 	bl	80005b4 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000586:	f7ff fe93 	bl	80002b0 <main>

0800058a <LoopForever>:

LoopForever:
    b LoopForever
 800058a:	e7fe      	b.n	800058a <LoopForever>
  ldr   r0, =_estack
 800058c:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000590:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000594:	2000007c 	.word	0x2000007c
  ldr r2, =_sidata
 8000598:	080014a4 	.word	0x080014a4
  ldr r2, =_sbss
 800059c:	2000007c 	.word	0x2000007c
  ldr r4, =_ebss
 80005a0:	200000b0 	.word	0x200000b0

080005a4 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80005a4:	e7fe      	b.n	80005a4 <ADC_IRQHandler>
	...

080005a8 <__errno>:
 80005a8:	4b01      	ldr	r3, [pc, #4]	; (80005b0 <__errno+0x8>)
 80005aa:	6818      	ldr	r0, [r3, #0]
 80005ac:	4770      	bx	lr
 80005ae:	bf00      	nop
 80005b0:	20000018 	.word	0x20000018

080005b4 <__libc_init_array>:
 80005b4:	b570      	push	{r4, r5, r6, lr}
 80005b6:	4e0d      	ldr	r6, [pc, #52]	; (80005ec <__libc_init_array+0x38>)
 80005b8:	4c0d      	ldr	r4, [pc, #52]	; (80005f0 <__libc_init_array+0x3c>)
 80005ba:	1ba4      	subs	r4, r4, r6
 80005bc:	10a4      	asrs	r4, r4, #2
 80005be:	2500      	movs	r5, #0
 80005c0:	42a5      	cmp	r5, r4
 80005c2:	d109      	bne.n	80005d8 <__libc_init_array+0x24>
 80005c4:	4e0b      	ldr	r6, [pc, #44]	; (80005f4 <__libc_init_array+0x40>)
 80005c6:	4c0c      	ldr	r4, [pc, #48]	; (80005f8 <__libc_init_array+0x44>)
 80005c8:	f000 ff02 	bl	80013d0 <_init>
 80005cc:	1ba4      	subs	r4, r4, r6
 80005ce:	10a4      	asrs	r4, r4, #2
 80005d0:	2500      	movs	r5, #0
 80005d2:	42a5      	cmp	r5, r4
 80005d4:	d105      	bne.n	80005e2 <__libc_init_array+0x2e>
 80005d6:	bd70      	pop	{r4, r5, r6, pc}
 80005d8:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 80005dc:	4798      	blx	r3
 80005de:	3501      	adds	r5, #1
 80005e0:	e7ee      	b.n	80005c0 <__libc_init_array+0xc>
 80005e2:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 80005e6:	4798      	blx	r3
 80005e8:	3501      	adds	r5, #1
 80005ea:	e7f2      	b.n	80005d2 <__libc_init_array+0x1e>
 80005ec:	0800149c 	.word	0x0800149c
 80005f0:	0800149c 	.word	0x0800149c
 80005f4:	0800149c 	.word	0x0800149c
 80005f8:	080014a0 	.word	0x080014a0

080005fc <memset>:
 80005fc:	4402      	add	r2, r0
 80005fe:	4603      	mov	r3, r0
 8000600:	4293      	cmp	r3, r2
 8000602:	d100      	bne.n	8000606 <memset+0xa>
 8000604:	4770      	bx	lr
 8000606:	f803 1b01 	strb.w	r1, [r3], #1
 800060a:	e7f9      	b.n	8000600 <memset+0x4>

0800060c <iprintf>:
 800060c:	b40f      	push	{r0, r1, r2, r3}
 800060e:	4b0a      	ldr	r3, [pc, #40]	; (8000638 <iprintf+0x2c>)
 8000610:	b513      	push	{r0, r1, r4, lr}
 8000612:	681c      	ldr	r4, [r3, #0]
 8000614:	b124      	cbz	r4, 8000620 <iprintf+0x14>
 8000616:	69a3      	ldr	r3, [r4, #24]
 8000618:	b913      	cbnz	r3, 8000620 <iprintf+0x14>
 800061a:	4620      	mov	r0, r4
 800061c:	f000 f84e 	bl	80006bc <__sinit>
 8000620:	ab05      	add	r3, sp, #20
 8000622:	9a04      	ldr	r2, [sp, #16]
 8000624:	68a1      	ldr	r1, [r4, #8]
 8000626:	9301      	str	r3, [sp, #4]
 8000628:	4620      	mov	r0, r4
 800062a:	f000 f953 	bl	80008d4 <_vfiprintf_r>
 800062e:	b002      	add	sp, #8
 8000630:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000634:	b004      	add	sp, #16
 8000636:	4770      	bx	lr
 8000638:	20000018 	.word	0x20000018

0800063c <std>:
 800063c:	2300      	movs	r3, #0
 800063e:	b510      	push	{r4, lr}
 8000640:	4604      	mov	r4, r0
 8000642:	e9c0 3300 	strd	r3, r3, [r0]
 8000646:	6083      	str	r3, [r0, #8]
 8000648:	8181      	strh	r1, [r0, #12]
 800064a:	6643      	str	r3, [r0, #100]	; 0x64
 800064c:	81c2      	strh	r2, [r0, #14]
 800064e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000652:	6183      	str	r3, [r0, #24]
 8000654:	4619      	mov	r1, r3
 8000656:	2208      	movs	r2, #8
 8000658:	305c      	adds	r0, #92	; 0x5c
 800065a:	f7ff ffcf 	bl	80005fc <memset>
 800065e:	4b05      	ldr	r3, [pc, #20]	; (8000674 <std+0x38>)
 8000660:	6263      	str	r3, [r4, #36]	; 0x24
 8000662:	4b05      	ldr	r3, [pc, #20]	; (8000678 <std+0x3c>)
 8000664:	62a3      	str	r3, [r4, #40]	; 0x28
 8000666:	4b05      	ldr	r3, [pc, #20]	; (800067c <std+0x40>)
 8000668:	62e3      	str	r3, [r4, #44]	; 0x2c
 800066a:	4b05      	ldr	r3, [pc, #20]	; (8000680 <std+0x44>)
 800066c:	6224      	str	r4, [r4, #32]
 800066e:	6323      	str	r3, [r4, #48]	; 0x30
 8000670:	bd10      	pop	{r4, pc}
 8000672:	bf00      	nop
 8000674:	08000e31 	.word	0x08000e31
 8000678:	08000e53 	.word	0x08000e53
 800067c:	08000e8b 	.word	0x08000e8b
 8000680:	08000eaf 	.word	0x08000eaf

08000684 <_cleanup_r>:
 8000684:	4901      	ldr	r1, [pc, #4]	; (800068c <_cleanup_r+0x8>)
 8000686:	f000 b885 	b.w	8000794 <_fwalk_reent>
 800068a:	bf00      	nop
 800068c:	08001189 	.word	0x08001189

08000690 <__sfmoreglue>:
 8000690:	b570      	push	{r4, r5, r6, lr}
 8000692:	1e4a      	subs	r2, r1, #1
 8000694:	2568      	movs	r5, #104	; 0x68
 8000696:	4355      	muls	r5, r2
 8000698:	460e      	mov	r6, r1
 800069a:	f105 0174 	add.w	r1, r5, #116	; 0x74
 800069e:	f000 f897 	bl	80007d0 <_malloc_r>
 80006a2:	4604      	mov	r4, r0
 80006a4:	b140      	cbz	r0, 80006b8 <__sfmoreglue+0x28>
 80006a6:	2100      	movs	r1, #0
 80006a8:	e9c0 1600 	strd	r1, r6, [r0]
 80006ac:	300c      	adds	r0, #12
 80006ae:	60a0      	str	r0, [r4, #8]
 80006b0:	f105 0268 	add.w	r2, r5, #104	; 0x68
 80006b4:	f7ff ffa2 	bl	80005fc <memset>
 80006b8:	4620      	mov	r0, r4
 80006ba:	bd70      	pop	{r4, r5, r6, pc}

080006bc <__sinit>:
 80006bc:	6983      	ldr	r3, [r0, #24]
 80006be:	b510      	push	{r4, lr}
 80006c0:	4604      	mov	r4, r0
 80006c2:	bb33      	cbnz	r3, 8000712 <__sinit+0x56>
 80006c4:	e9c0 3312 	strd	r3, r3, [r0, #72]	; 0x48
 80006c8:	6503      	str	r3, [r0, #80]	; 0x50
 80006ca:	4b12      	ldr	r3, [pc, #72]	; (8000714 <__sinit+0x58>)
 80006cc:	4a12      	ldr	r2, [pc, #72]	; (8000718 <__sinit+0x5c>)
 80006ce:	681b      	ldr	r3, [r3, #0]
 80006d0:	6282      	str	r2, [r0, #40]	; 0x28
 80006d2:	4298      	cmp	r0, r3
 80006d4:	bf04      	itt	eq
 80006d6:	2301      	moveq	r3, #1
 80006d8:	6183      	streq	r3, [r0, #24]
 80006da:	f000 f81f 	bl	800071c <__sfp>
 80006de:	6060      	str	r0, [r4, #4]
 80006e0:	4620      	mov	r0, r4
 80006e2:	f000 f81b 	bl	800071c <__sfp>
 80006e6:	60a0      	str	r0, [r4, #8]
 80006e8:	4620      	mov	r0, r4
 80006ea:	f000 f817 	bl	800071c <__sfp>
 80006ee:	2200      	movs	r2, #0
 80006f0:	60e0      	str	r0, [r4, #12]
 80006f2:	2104      	movs	r1, #4
 80006f4:	6860      	ldr	r0, [r4, #4]
 80006f6:	f7ff ffa1 	bl	800063c <std>
 80006fa:	2201      	movs	r2, #1
 80006fc:	2109      	movs	r1, #9
 80006fe:	68a0      	ldr	r0, [r4, #8]
 8000700:	f7ff ff9c 	bl	800063c <std>
 8000704:	2202      	movs	r2, #2
 8000706:	2112      	movs	r1, #18
 8000708:	68e0      	ldr	r0, [r4, #12]
 800070a:	f7ff ff97 	bl	800063c <std>
 800070e:	2301      	movs	r3, #1
 8000710:	61a3      	str	r3, [r4, #24]
 8000712:	bd10      	pop	{r4, pc}
 8000714:	08001404 	.word	0x08001404
 8000718:	08000685 	.word	0x08000685

0800071c <__sfp>:
 800071c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800071e:	4b1b      	ldr	r3, [pc, #108]	; (800078c <__sfp+0x70>)
 8000720:	681e      	ldr	r6, [r3, #0]
 8000722:	69b3      	ldr	r3, [r6, #24]
 8000724:	4607      	mov	r7, r0
 8000726:	b913      	cbnz	r3, 800072e <__sfp+0x12>
 8000728:	4630      	mov	r0, r6
 800072a:	f7ff ffc7 	bl	80006bc <__sinit>
 800072e:	3648      	adds	r6, #72	; 0x48
 8000730:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8000734:	3b01      	subs	r3, #1
 8000736:	d503      	bpl.n	8000740 <__sfp+0x24>
 8000738:	6833      	ldr	r3, [r6, #0]
 800073a:	b133      	cbz	r3, 800074a <__sfp+0x2e>
 800073c:	6836      	ldr	r6, [r6, #0]
 800073e:	e7f7      	b.n	8000730 <__sfp+0x14>
 8000740:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8000744:	b16d      	cbz	r5, 8000762 <__sfp+0x46>
 8000746:	3468      	adds	r4, #104	; 0x68
 8000748:	e7f4      	b.n	8000734 <__sfp+0x18>
 800074a:	2104      	movs	r1, #4
 800074c:	4638      	mov	r0, r7
 800074e:	f7ff ff9f 	bl	8000690 <__sfmoreglue>
 8000752:	6030      	str	r0, [r6, #0]
 8000754:	2800      	cmp	r0, #0
 8000756:	d1f1      	bne.n	800073c <__sfp+0x20>
 8000758:	230c      	movs	r3, #12
 800075a:	603b      	str	r3, [r7, #0]
 800075c:	4604      	mov	r4, r0
 800075e:	4620      	mov	r0, r4
 8000760:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000762:	4b0b      	ldr	r3, [pc, #44]	; (8000790 <__sfp+0x74>)
 8000764:	6665      	str	r5, [r4, #100]	; 0x64
 8000766:	e9c4 5500 	strd	r5, r5, [r4]
 800076a:	60a5      	str	r5, [r4, #8]
 800076c:	e9c4 3503 	strd	r3, r5, [r4, #12]
 8000770:	e9c4 5505 	strd	r5, r5, [r4, #20]
 8000774:	2208      	movs	r2, #8
 8000776:	4629      	mov	r1, r5
 8000778:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 800077c:	f7ff ff3e 	bl	80005fc <memset>
 8000780:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8000784:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8000788:	e7e9      	b.n	800075e <__sfp+0x42>
 800078a:	bf00      	nop
 800078c:	08001404 	.word	0x08001404
 8000790:	ffff0001 	.word	0xffff0001

08000794 <_fwalk_reent>:
 8000794:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000798:	4680      	mov	r8, r0
 800079a:	4689      	mov	r9, r1
 800079c:	f100 0448 	add.w	r4, r0, #72	; 0x48
 80007a0:	2600      	movs	r6, #0
 80007a2:	b914      	cbnz	r4, 80007aa <_fwalk_reent+0x16>
 80007a4:	4630      	mov	r0, r6
 80007a6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80007aa:	e9d4 7501 	ldrd	r7, r5, [r4, #4]
 80007ae:	3f01      	subs	r7, #1
 80007b0:	d501      	bpl.n	80007b6 <_fwalk_reent+0x22>
 80007b2:	6824      	ldr	r4, [r4, #0]
 80007b4:	e7f5      	b.n	80007a2 <_fwalk_reent+0xe>
 80007b6:	89ab      	ldrh	r3, [r5, #12]
 80007b8:	2b01      	cmp	r3, #1
 80007ba:	d907      	bls.n	80007cc <_fwalk_reent+0x38>
 80007bc:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80007c0:	3301      	adds	r3, #1
 80007c2:	d003      	beq.n	80007cc <_fwalk_reent+0x38>
 80007c4:	4629      	mov	r1, r5
 80007c6:	4640      	mov	r0, r8
 80007c8:	47c8      	blx	r9
 80007ca:	4306      	orrs	r6, r0
 80007cc:	3568      	adds	r5, #104	; 0x68
 80007ce:	e7ee      	b.n	80007ae <_fwalk_reent+0x1a>

080007d0 <_malloc_r>:
 80007d0:	b570      	push	{r4, r5, r6, lr}
 80007d2:	1ccd      	adds	r5, r1, #3
 80007d4:	f025 0503 	bic.w	r5, r5, #3
 80007d8:	3508      	adds	r5, #8
 80007da:	2d0c      	cmp	r5, #12
 80007dc:	bf38      	it	cc
 80007de:	250c      	movcc	r5, #12
 80007e0:	2d00      	cmp	r5, #0
 80007e2:	4606      	mov	r6, r0
 80007e4:	db01      	blt.n	80007ea <_malloc_r+0x1a>
 80007e6:	42a9      	cmp	r1, r5
 80007e8:	d903      	bls.n	80007f2 <_malloc_r+0x22>
 80007ea:	230c      	movs	r3, #12
 80007ec:	6033      	str	r3, [r6, #0]
 80007ee:	2000      	movs	r0, #0
 80007f0:	bd70      	pop	{r4, r5, r6, pc}
 80007f2:	f000 fd69 	bl	80012c8 <__malloc_lock>
 80007f6:	4a21      	ldr	r2, [pc, #132]	; (800087c <_malloc_r+0xac>)
 80007f8:	6814      	ldr	r4, [r2, #0]
 80007fa:	4621      	mov	r1, r4
 80007fc:	b991      	cbnz	r1, 8000824 <_malloc_r+0x54>
 80007fe:	4c20      	ldr	r4, [pc, #128]	; (8000880 <_malloc_r+0xb0>)
 8000800:	6823      	ldr	r3, [r4, #0]
 8000802:	b91b      	cbnz	r3, 800080c <_malloc_r+0x3c>
 8000804:	4630      	mov	r0, r6
 8000806:	f000 fb03 	bl	8000e10 <_sbrk_r>
 800080a:	6020      	str	r0, [r4, #0]
 800080c:	4629      	mov	r1, r5
 800080e:	4630      	mov	r0, r6
 8000810:	f000 fafe 	bl	8000e10 <_sbrk_r>
 8000814:	1c43      	adds	r3, r0, #1
 8000816:	d124      	bne.n	8000862 <_malloc_r+0x92>
 8000818:	230c      	movs	r3, #12
 800081a:	6033      	str	r3, [r6, #0]
 800081c:	4630      	mov	r0, r6
 800081e:	f000 fd54 	bl	80012ca <__malloc_unlock>
 8000822:	e7e4      	b.n	80007ee <_malloc_r+0x1e>
 8000824:	680b      	ldr	r3, [r1, #0]
 8000826:	1b5b      	subs	r3, r3, r5
 8000828:	d418      	bmi.n	800085c <_malloc_r+0x8c>
 800082a:	2b0b      	cmp	r3, #11
 800082c:	d90f      	bls.n	800084e <_malloc_r+0x7e>
 800082e:	600b      	str	r3, [r1, #0]
 8000830:	50cd      	str	r5, [r1, r3]
 8000832:	18cc      	adds	r4, r1, r3
 8000834:	4630      	mov	r0, r6
 8000836:	f000 fd48 	bl	80012ca <__malloc_unlock>
 800083a:	f104 000b 	add.w	r0, r4, #11
 800083e:	1d23      	adds	r3, r4, #4
 8000840:	f020 0007 	bic.w	r0, r0, #7
 8000844:	1ac3      	subs	r3, r0, r3
 8000846:	d0d3      	beq.n	80007f0 <_malloc_r+0x20>
 8000848:	425a      	negs	r2, r3
 800084a:	50e2      	str	r2, [r4, r3]
 800084c:	e7d0      	b.n	80007f0 <_malloc_r+0x20>
 800084e:	428c      	cmp	r4, r1
 8000850:	684b      	ldr	r3, [r1, #4]
 8000852:	bf16      	itet	ne
 8000854:	6063      	strne	r3, [r4, #4]
 8000856:	6013      	streq	r3, [r2, #0]
 8000858:	460c      	movne	r4, r1
 800085a:	e7eb      	b.n	8000834 <_malloc_r+0x64>
 800085c:	460c      	mov	r4, r1
 800085e:	6849      	ldr	r1, [r1, #4]
 8000860:	e7cc      	b.n	80007fc <_malloc_r+0x2c>
 8000862:	1cc4      	adds	r4, r0, #3
 8000864:	f024 0403 	bic.w	r4, r4, #3
 8000868:	42a0      	cmp	r0, r4
 800086a:	d005      	beq.n	8000878 <_malloc_r+0xa8>
 800086c:	1a21      	subs	r1, r4, r0
 800086e:	4630      	mov	r0, r6
 8000870:	f000 face 	bl	8000e10 <_sbrk_r>
 8000874:	3001      	adds	r0, #1
 8000876:	d0cf      	beq.n	8000818 <_malloc_r+0x48>
 8000878:	6025      	str	r5, [r4, #0]
 800087a:	e7db      	b.n	8000834 <_malloc_r+0x64>
 800087c:	200000a4 	.word	0x200000a4
 8000880:	200000a8 	.word	0x200000a8

08000884 <__sfputc_r>:
 8000884:	6893      	ldr	r3, [r2, #8]
 8000886:	3b01      	subs	r3, #1
 8000888:	2b00      	cmp	r3, #0
 800088a:	b410      	push	{r4}
 800088c:	6093      	str	r3, [r2, #8]
 800088e:	da07      	bge.n	80008a0 <__sfputc_r+0x1c>
 8000890:	6994      	ldr	r4, [r2, #24]
 8000892:	42a3      	cmp	r3, r4
 8000894:	db01      	blt.n	800089a <__sfputc_r+0x16>
 8000896:	290a      	cmp	r1, #10
 8000898:	d102      	bne.n	80008a0 <__sfputc_r+0x1c>
 800089a:	bc10      	pop	{r4}
 800089c:	f000 bb0c 	b.w	8000eb8 <__swbuf_r>
 80008a0:	6813      	ldr	r3, [r2, #0]
 80008a2:	1c58      	adds	r0, r3, #1
 80008a4:	6010      	str	r0, [r2, #0]
 80008a6:	7019      	strb	r1, [r3, #0]
 80008a8:	4608      	mov	r0, r1
 80008aa:	bc10      	pop	{r4}
 80008ac:	4770      	bx	lr

080008ae <__sfputs_r>:
 80008ae:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80008b0:	4606      	mov	r6, r0
 80008b2:	460f      	mov	r7, r1
 80008b4:	4614      	mov	r4, r2
 80008b6:	18d5      	adds	r5, r2, r3
 80008b8:	42ac      	cmp	r4, r5
 80008ba:	d101      	bne.n	80008c0 <__sfputs_r+0x12>
 80008bc:	2000      	movs	r0, #0
 80008be:	e007      	b.n	80008d0 <__sfputs_r+0x22>
 80008c0:	463a      	mov	r2, r7
 80008c2:	f814 1b01 	ldrb.w	r1, [r4], #1
 80008c6:	4630      	mov	r0, r6
 80008c8:	f7ff ffdc 	bl	8000884 <__sfputc_r>
 80008cc:	1c43      	adds	r3, r0, #1
 80008ce:	d1f3      	bne.n	80008b8 <__sfputs_r+0xa>
 80008d0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

080008d4 <_vfiprintf_r>:
 80008d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80008d8:	460c      	mov	r4, r1
 80008da:	b09d      	sub	sp, #116	; 0x74
 80008dc:	4617      	mov	r7, r2
 80008de:	461d      	mov	r5, r3
 80008e0:	4606      	mov	r6, r0
 80008e2:	b118      	cbz	r0, 80008ec <_vfiprintf_r+0x18>
 80008e4:	6983      	ldr	r3, [r0, #24]
 80008e6:	b90b      	cbnz	r3, 80008ec <_vfiprintf_r+0x18>
 80008e8:	f7ff fee8 	bl	80006bc <__sinit>
 80008ec:	4b7c      	ldr	r3, [pc, #496]	; (8000ae0 <_vfiprintf_r+0x20c>)
 80008ee:	429c      	cmp	r4, r3
 80008f0:	d158      	bne.n	80009a4 <_vfiprintf_r+0xd0>
 80008f2:	6874      	ldr	r4, [r6, #4]
 80008f4:	89a3      	ldrh	r3, [r4, #12]
 80008f6:	0718      	lsls	r0, r3, #28
 80008f8:	d55e      	bpl.n	80009b8 <_vfiprintf_r+0xe4>
 80008fa:	6923      	ldr	r3, [r4, #16]
 80008fc:	2b00      	cmp	r3, #0
 80008fe:	d05b      	beq.n	80009b8 <_vfiprintf_r+0xe4>
 8000900:	2300      	movs	r3, #0
 8000902:	9309      	str	r3, [sp, #36]	; 0x24
 8000904:	2320      	movs	r3, #32
 8000906:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800090a:	2330      	movs	r3, #48	; 0x30
 800090c:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8000910:	9503      	str	r5, [sp, #12]
 8000912:	f04f 0b01 	mov.w	fp, #1
 8000916:	46b8      	mov	r8, r7
 8000918:	4645      	mov	r5, r8
 800091a:	f815 3b01 	ldrb.w	r3, [r5], #1
 800091e:	b10b      	cbz	r3, 8000924 <_vfiprintf_r+0x50>
 8000920:	2b25      	cmp	r3, #37	; 0x25
 8000922:	d154      	bne.n	80009ce <_vfiprintf_r+0xfa>
 8000924:	ebb8 0a07 	subs.w	sl, r8, r7
 8000928:	d00b      	beq.n	8000942 <_vfiprintf_r+0x6e>
 800092a:	4653      	mov	r3, sl
 800092c:	463a      	mov	r2, r7
 800092e:	4621      	mov	r1, r4
 8000930:	4630      	mov	r0, r6
 8000932:	f7ff ffbc 	bl	80008ae <__sfputs_r>
 8000936:	3001      	adds	r0, #1
 8000938:	f000 80c2 	beq.w	8000ac0 <_vfiprintf_r+0x1ec>
 800093c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800093e:	4453      	add	r3, sl
 8000940:	9309      	str	r3, [sp, #36]	; 0x24
 8000942:	f898 3000 	ldrb.w	r3, [r8]
 8000946:	2b00      	cmp	r3, #0
 8000948:	f000 80ba 	beq.w	8000ac0 <_vfiprintf_r+0x1ec>
 800094c:	2300      	movs	r3, #0
 800094e:	f04f 32ff 	mov.w	r2, #4294967295
 8000952:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000956:	9304      	str	r3, [sp, #16]
 8000958:	9307      	str	r3, [sp, #28]
 800095a:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 800095e:	931a      	str	r3, [sp, #104]	; 0x68
 8000960:	46a8      	mov	r8, r5
 8000962:	2205      	movs	r2, #5
 8000964:	f818 1b01 	ldrb.w	r1, [r8], #1
 8000968:	485e      	ldr	r0, [pc, #376]	; (8000ae4 <_vfiprintf_r+0x210>)
 800096a:	f7ff fc51 	bl	8000210 <memchr>
 800096e:	9b04      	ldr	r3, [sp, #16]
 8000970:	bb78      	cbnz	r0, 80009d2 <_vfiprintf_r+0xfe>
 8000972:	06d9      	lsls	r1, r3, #27
 8000974:	bf44      	itt	mi
 8000976:	2220      	movmi	r2, #32
 8000978:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 800097c:	071a      	lsls	r2, r3, #28
 800097e:	bf44      	itt	mi
 8000980:	222b      	movmi	r2, #43	; 0x2b
 8000982:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8000986:	782a      	ldrb	r2, [r5, #0]
 8000988:	2a2a      	cmp	r2, #42	; 0x2a
 800098a:	d02a      	beq.n	80009e2 <_vfiprintf_r+0x10e>
 800098c:	9a07      	ldr	r2, [sp, #28]
 800098e:	46a8      	mov	r8, r5
 8000990:	2000      	movs	r0, #0
 8000992:	250a      	movs	r5, #10
 8000994:	4641      	mov	r1, r8
 8000996:	f811 3b01 	ldrb.w	r3, [r1], #1
 800099a:	3b30      	subs	r3, #48	; 0x30
 800099c:	2b09      	cmp	r3, #9
 800099e:	d969      	bls.n	8000a74 <_vfiprintf_r+0x1a0>
 80009a0:	b360      	cbz	r0, 80009fc <_vfiprintf_r+0x128>
 80009a2:	e024      	b.n	80009ee <_vfiprintf_r+0x11a>
 80009a4:	4b50      	ldr	r3, [pc, #320]	; (8000ae8 <_vfiprintf_r+0x214>)
 80009a6:	429c      	cmp	r4, r3
 80009a8:	d101      	bne.n	80009ae <_vfiprintf_r+0xda>
 80009aa:	68b4      	ldr	r4, [r6, #8]
 80009ac:	e7a2      	b.n	80008f4 <_vfiprintf_r+0x20>
 80009ae:	4b4f      	ldr	r3, [pc, #316]	; (8000aec <_vfiprintf_r+0x218>)
 80009b0:	429c      	cmp	r4, r3
 80009b2:	bf08      	it	eq
 80009b4:	68f4      	ldreq	r4, [r6, #12]
 80009b6:	e79d      	b.n	80008f4 <_vfiprintf_r+0x20>
 80009b8:	4621      	mov	r1, r4
 80009ba:	4630      	mov	r0, r6
 80009bc:	f000 fae0 	bl	8000f80 <__swsetup_r>
 80009c0:	2800      	cmp	r0, #0
 80009c2:	d09d      	beq.n	8000900 <_vfiprintf_r+0x2c>
 80009c4:	f04f 30ff 	mov.w	r0, #4294967295
 80009c8:	b01d      	add	sp, #116	; 0x74
 80009ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80009ce:	46a8      	mov	r8, r5
 80009d0:	e7a2      	b.n	8000918 <_vfiprintf_r+0x44>
 80009d2:	4a44      	ldr	r2, [pc, #272]	; (8000ae4 <_vfiprintf_r+0x210>)
 80009d4:	1a80      	subs	r0, r0, r2
 80009d6:	fa0b f000 	lsl.w	r0, fp, r0
 80009da:	4318      	orrs	r0, r3
 80009dc:	9004      	str	r0, [sp, #16]
 80009de:	4645      	mov	r5, r8
 80009e0:	e7be      	b.n	8000960 <_vfiprintf_r+0x8c>
 80009e2:	9a03      	ldr	r2, [sp, #12]
 80009e4:	1d11      	adds	r1, r2, #4
 80009e6:	6812      	ldr	r2, [r2, #0]
 80009e8:	9103      	str	r1, [sp, #12]
 80009ea:	2a00      	cmp	r2, #0
 80009ec:	db01      	blt.n	80009f2 <_vfiprintf_r+0x11e>
 80009ee:	9207      	str	r2, [sp, #28]
 80009f0:	e004      	b.n	80009fc <_vfiprintf_r+0x128>
 80009f2:	4252      	negs	r2, r2
 80009f4:	f043 0302 	orr.w	r3, r3, #2
 80009f8:	9207      	str	r2, [sp, #28]
 80009fa:	9304      	str	r3, [sp, #16]
 80009fc:	f898 3000 	ldrb.w	r3, [r8]
 8000a00:	2b2e      	cmp	r3, #46	; 0x2e
 8000a02:	d10e      	bne.n	8000a22 <_vfiprintf_r+0x14e>
 8000a04:	f898 3001 	ldrb.w	r3, [r8, #1]
 8000a08:	2b2a      	cmp	r3, #42	; 0x2a
 8000a0a:	d138      	bne.n	8000a7e <_vfiprintf_r+0x1aa>
 8000a0c:	9b03      	ldr	r3, [sp, #12]
 8000a0e:	1d1a      	adds	r2, r3, #4
 8000a10:	681b      	ldr	r3, [r3, #0]
 8000a12:	9203      	str	r2, [sp, #12]
 8000a14:	2b00      	cmp	r3, #0
 8000a16:	bfb8      	it	lt
 8000a18:	f04f 33ff 	movlt.w	r3, #4294967295
 8000a1c:	f108 0802 	add.w	r8, r8, #2
 8000a20:	9305      	str	r3, [sp, #20]
 8000a22:	4d33      	ldr	r5, [pc, #204]	; (8000af0 <_vfiprintf_r+0x21c>)
 8000a24:	f898 1000 	ldrb.w	r1, [r8]
 8000a28:	2203      	movs	r2, #3
 8000a2a:	4628      	mov	r0, r5
 8000a2c:	f7ff fbf0 	bl	8000210 <memchr>
 8000a30:	b140      	cbz	r0, 8000a44 <_vfiprintf_r+0x170>
 8000a32:	2340      	movs	r3, #64	; 0x40
 8000a34:	1b40      	subs	r0, r0, r5
 8000a36:	fa03 f000 	lsl.w	r0, r3, r0
 8000a3a:	9b04      	ldr	r3, [sp, #16]
 8000a3c:	4303      	orrs	r3, r0
 8000a3e:	f108 0801 	add.w	r8, r8, #1
 8000a42:	9304      	str	r3, [sp, #16]
 8000a44:	f898 1000 	ldrb.w	r1, [r8]
 8000a48:	482a      	ldr	r0, [pc, #168]	; (8000af4 <_vfiprintf_r+0x220>)
 8000a4a:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8000a4e:	2206      	movs	r2, #6
 8000a50:	f108 0701 	add.w	r7, r8, #1
 8000a54:	f7ff fbdc 	bl	8000210 <memchr>
 8000a58:	2800      	cmp	r0, #0
 8000a5a:	d037      	beq.n	8000acc <_vfiprintf_r+0x1f8>
 8000a5c:	4b26      	ldr	r3, [pc, #152]	; (8000af8 <_vfiprintf_r+0x224>)
 8000a5e:	bb1b      	cbnz	r3, 8000aa8 <_vfiprintf_r+0x1d4>
 8000a60:	9b03      	ldr	r3, [sp, #12]
 8000a62:	3307      	adds	r3, #7
 8000a64:	f023 0307 	bic.w	r3, r3, #7
 8000a68:	3308      	adds	r3, #8
 8000a6a:	9303      	str	r3, [sp, #12]
 8000a6c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000a6e:	444b      	add	r3, r9
 8000a70:	9309      	str	r3, [sp, #36]	; 0x24
 8000a72:	e750      	b.n	8000916 <_vfiprintf_r+0x42>
 8000a74:	fb05 3202 	mla	r2, r5, r2, r3
 8000a78:	2001      	movs	r0, #1
 8000a7a:	4688      	mov	r8, r1
 8000a7c:	e78a      	b.n	8000994 <_vfiprintf_r+0xc0>
 8000a7e:	2300      	movs	r3, #0
 8000a80:	f108 0801 	add.w	r8, r8, #1
 8000a84:	9305      	str	r3, [sp, #20]
 8000a86:	4619      	mov	r1, r3
 8000a88:	250a      	movs	r5, #10
 8000a8a:	4640      	mov	r0, r8
 8000a8c:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000a90:	3a30      	subs	r2, #48	; 0x30
 8000a92:	2a09      	cmp	r2, #9
 8000a94:	d903      	bls.n	8000a9e <_vfiprintf_r+0x1ca>
 8000a96:	2b00      	cmp	r3, #0
 8000a98:	d0c3      	beq.n	8000a22 <_vfiprintf_r+0x14e>
 8000a9a:	9105      	str	r1, [sp, #20]
 8000a9c:	e7c1      	b.n	8000a22 <_vfiprintf_r+0x14e>
 8000a9e:	fb05 2101 	mla	r1, r5, r1, r2
 8000aa2:	2301      	movs	r3, #1
 8000aa4:	4680      	mov	r8, r0
 8000aa6:	e7f0      	b.n	8000a8a <_vfiprintf_r+0x1b6>
 8000aa8:	ab03      	add	r3, sp, #12
 8000aaa:	9300      	str	r3, [sp, #0]
 8000aac:	4622      	mov	r2, r4
 8000aae:	4b13      	ldr	r3, [pc, #76]	; (8000afc <_vfiprintf_r+0x228>)
 8000ab0:	a904      	add	r1, sp, #16
 8000ab2:	4630      	mov	r0, r6
 8000ab4:	f3af 8000 	nop.w
 8000ab8:	f1b0 3fff 	cmp.w	r0, #4294967295
 8000abc:	4681      	mov	r9, r0
 8000abe:	d1d5      	bne.n	8000a6c <_vfiprintf_r+0x198>
 8000ac0:	89a3      	ldrh	r3, [r4, #12]
 8000ac2:	065b      	lsls	r3, r3, #25
 8000ac4:	f53f af7e 	bmi.w	80009c4 <_vfiprintf_r+0xf0>
 8000ac8:	9809      	ldr	r0, [sp, #36]	; 0x24
 8000aca:	e77d      	b.n	80009c8 <_vfiprintf_r+0xf4>
 8000acc:	ab03      	add	r3, sp, #12
 8000ace:	9300      	str	r3, [sp, #0]
 8000ad0:	4622      	mov	r2, r4
 8000ad2:	4b0a      	ldr	r3, [pc, #40]	; (8000afc <_vfiprintf_r+0x228>)
 8000ad4:	a904      	add	r1, sp, #16
 8000ad6:	4630      	mov	r0, r6
 8000ad8:	f000 f888 	bl	8000bec <_printf_i>
 8000adc:	e7ec      	b.n	8000ab8 <_vfiprintf_r+0x1e4>
 8000ade:	bf00      	nop
 8000ae0:	08001428 	.word	0x08001428
 8000ae4:	08001468 	.word	0x08001468
 8000ae8:	08001448 	.word	0x08001448
 8000aec:	08001408 	.word	0x08001408
 8000af0:	0800146e 	.word	0x0800146e
 8000af4:	08001472 	.word	0x08001472
 8000af8:	00000000 	.word	0x00000000
 8000afc:	080008af 	.word	0x080008af

08000b00 <_printf_common>:
 8000b00:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000b04:	4691      	mov	r9, r2
 8000b06:	461f      	mov	r7, r3
 8000b08:	688a      	ldr	r2, [r1, #8]
 8000b0a:	690b      	ldr	r3, [r1, #16]
 8000b0c:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8000b10:	4293      	cmp	r3, r2
 8000b12:	bfb8      	it	lt
 8000b14:	4613      	movlt	r3, r2
 8000b16:	f8c9 3000 	str.w	r3, [r9]
 8000b1a:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8000b1e:	4606      	mov	r6, r0
 8000b20:	460c      	mov	r4, r1
 8000b22:	b112      	cbz	r2, 8000b2a <_printf_common+0x2a>
 8000b24:	3301      	adds	r3, #1
 8000b26:	f8c9 3000 	str.w	r3, [r9]
 8000b2a:	6823      	ldr	r3, [r4, #0]
 8000b2c:	0699      	lsls	r1, r3, #26
 8000b2e:	bf42      	ittt	mi
 8000b30:	f8d9 3000 	ldrmi.w	r3, [r9]
 8000b34:	3302      	addmi	r3, #2
 8000b36:	f8c9 3000 	strmi.w	r3, [r9]
 8000b3a:	6825      	ldr	r5, [r4, #0]
 8000b3c:	f015 0506 	ands.w	r5, r5, #6
 8000b40:	d107      	bne.n	8000b52 <_printf_common+0x52>
 8000b42:	f104 0a19 	add.w	sl, r4, #25
 8000b46:	68e3      	ldr	r3, [r4, #12]
 8000b48:	f8d9 2000 	ldr.w	r2, [r9]
 8000b4c:	1a9b      	subs	r3, r3, r2
 8000b4e:	42ab      	cmp	r3, r5
 8000b50:	dc28      	bgt.n	8000ba4 <_printf_common+0xa4>
 8000b52:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
 8000b56:	6822      	ldr	r2, [r4, #0]
 8000b58:	3300      	adds	r3, #0
 8000b5a:	bf18      	it	ne
 8000b5c:	2301      	movne	r3, #1
 8000b5e:	0692      	lsls	r2, r2, #26
 8000b60:	d42d      	bmi.n	8000bbe <_printf_common+0xbe>
 8000b62:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000b66:	4639      	mov	r1, r7
 8000b68:	4630      	mov	r0, r6
 8000b6a:	47c0      	blx	r8
 8000b6c:	3001      	adds	r0, #1
 8000b6e:	d020      	beq.n	8000bb2 <_printf_common+0xb2>
 8000b70:	6823      	ldr	r3, [r4, #0]
 8000b72:	68e5      	ldr	r5, [r4, #12]
 8000b74:	f8d9 2000 	ldr.w	r2, [r9]
 8000b78:	f003 0306 	and.w	r3, r3, #6
 8000b7c:	2b04      	cmp	r3, #4
 8000b7e:	bf08      	it	eq
 8000b80:	1aad      	subeq	r5, r5, r2
 8000b82:	68a3      	ldr	r3, [r4, #8]
 8000b84:	6922      	ldr	r2, [r4, #16]
 8000b86:	bf0c      	ite	eq
 8000b88:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000b8c:	2500      	movne	r5, #0
 8000b8e:	4293      	cmp	r3, r2
 8000b90:	bfc4      	itt	gt
 8000b92:	1a9b      	subgt	r3, r3, r2
 8000b94:	18ed      	addgt	r5, r5, r3
 8000b96:	f04f 0900 	mov.w	r9, #0
 8000b9a:	341a      	adds	r4, #26
 8000b9c:	454d      	cmp	r5, r9
 8000b9e:	d11a      	bne.n	8000bd6 <_printf_common+0xd6>
 8000ba0:	2000      	movs	r0, #0
 8000ba2:	e008      	b.n	8000bb6 <_printf_common+0xb6>
 8000ba4:	2301      	movs	r3, #1
 8000ba6:	4652      	mov	r2, sl
 8000ba8:	4639      	mov	r1, r7
 8000baa:	4630      	mov	r0, r6
 8000bac:	47c0      	blx	r8
 8000bae:	3001      	adds	r0, #1
 8000bb0:	d103      	bne.n	8000bba <_printf_common+0xba>
 8000bb2:	f04f 30ff 	mov.w	r0, #4294967295
 8000bb6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000bba:	3501      	adds	r5, #1
 8000bbc:	e7c3      	b.n	8000b46 <_printf_common+0x46>
 8000bbe:	18e1      	adds	r1, r4, r3
 8000bc0:	1c5a      	adds	r2, r3, #1
 8000bc2:	2030      	movs	r0, #48	; 0x30
 8000bc4:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8000bc8:	4422      	add	r2, r4
 8000bca:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8000bce:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8000bd2:	3302      	adds	r3, #2
 8000bd4:	e7c5      	b.n	8000b62 <_printf_common+0x62>
 8000bd6:	2301      	movs	r3, #1
 8000bd8:	4622      	mov	r2, r4
 8000bda:	4639      	mov	r1, r7
 8000bdc:	4630      	mov	r0, r6
 8000bde:	47c0      	blx	r8
 8000be0:	3001      	adds	r0, #1
 8000be2:	d0e6      	beq.n	8000bb2 <_printf_common+0xb2>
 8000be4:	f109 0901 	add.w	r9, r9, #1
 8000be8:	e7d8      	b.n	8000b9c <_printf_common+0x9c>
	...

08000bec <_printf_i>:
 8000bec:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8000bf0:	f101 0c43 	add.w	ip, r1, #67	; 0x43
 8000bf4:	460c      	mov	r4, r1
 8000bf6:	7e09      	ldrb	r1, [r1, #24]
 8000bf8:	b085      	sub	sp, #20
 8000bfa:	296e      	cmp	r1, #110	; 0x6e
 8000bfc:	4617      	mov	r7, r2
 8000bfe:	4606      	mov	r6, r0
 8000c00:	4698      	mov	r8, r3
 8000c02:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8000c04:	f000 80b3 	beq.w	8000d6e <_printf_i+0x182>
 8000c08:	d822      	bhi.n	8000c50 <_printf_i+0x64>
 8000c0a:	2963      	cmp	r1, #99	; 0x63
 8000c0c:	d036      	beq.n	8000c7c <_printf_i+0x90>
 8000c0e:	d80a      	bhi.n	8000c26 <_printf_i+0x3a>
 8000c10:	2900      	cmp	r1, #0
 8000c12:	f000 80b9 	beq.w	8000d88 <_printf_i+0x19c>
 8000c16:	2958      	cmp	r1, #88	; 0x58
 8000c18:	f000 8083 	beq.w	8000d22 <_printf_i+0x136>
 8000c1c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000c20:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
 8000c24:	e032      	b.n	8000c8c <_printf_i+0xa0>
 8000c26:	2964      	cmp	r1, #100	; 0x64
 8000c28:	d001      	beq.n	8000c2e <_printf_i+0x42>
 8000c2a:	2969      	cmp	r1, #105	; 0x69
 8000c2c:	d1f6      	bne.n	8000c1c <_printf_i+0x30>
 8000c2e:	6820      	ldr	r0, [r4, #0]
 8000c30:	6813      	ldr	r3, [r2, #0]
 8000c32:	0605      	lsls	r5, r0, #24
 8000c34:	f103 0104 	add.w	r1, r3, #4
 8000c38:	d52a      	bpl.n	8000c90 <_printf_i+0xa4>
 8000c3a:	681b      	ldr	r3, [r3, #0]
 8000c3c:	6011      	str	r1, [r2, #0]
 8000c3e:	2b00      	cmp	r3, #0
 8000c40:	da03      	bge.n	8000c4a <_printf_i+0x5e>
 8000c42:	222d      	movs	r2, #45	; 0x2d
 8000c44:	425b      	negs	r3, r3
 8000c46:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
 8000c4a:	486f      	ldr	r0, [pc, #444]	; (8000e08 <_printf_i+0x21c>)
 8000c4c:	220a      	movs	r2, #10
 8000c4e:	e039      	b.n	8000cc4 <_printf_i+0xd8>
 8000c50:	2973      	cmp	r1, #115	; 0x73
 8000c52:	f000 809d 	beq.w	8000d90 <_printf_i+0x1a4>
 8000c56:	d808      	bhi.n	8000c6a <_printf_i+0x7e>
 8000c58:	296f      	cmp	r1, #111	; 0x6f
 8000c5a:	d020      	beq.n	8000c9e <_printf_i+0xb2>
 8000c5c:	2970      	cmp	r1, #112	; 0x70
 8000c5e:	d1dd      	bne.n	8000c1c <_printf_i+0x30>
 8000c60:	6823      	ldr	r3, [r4, #0]
 8000c62:	f043 0320 	orr.w	r3, r3, #32
 8000c66:	6023      	str	r3, [r4, #0]
 8000c68:	e003      	b.n	8000c72 <_printf_i+0x86>
 8000c6a:	2975      	cmp	r1, #117	; 0x75
 8000c6c:	d017      	beq.n	8000c9e <_printf_i+0xb2>
 8000c6e:	2978      	cmp	r1, #120	; 0x78
 8000c70:	d1d4      	bne.n	8000c1c <_printf_i+0x30>
 8000c72:	2378      	movs	r3, #120	; 0x78
 8000c74:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8000c78:	4864      	ldr	r0, [pc, #400]	; (8000e0c <_printf_i+0x220>)
 8000c7a:	e055      	b.n	8000d28 <_printf_i+0x13c>
 8000c7c:	6813      	ldr	r3, [r2, #0]
 8000c7e:	1d19      	adds	r1, r3, #4
 8000c80:	681b      	ldr	r3, [r3, #0]
 8000c82:	6011      	str	r1, [r2, #0]
 8000c84:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000c88:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8000c8c:	2301      	movs	r3, #1
 8000c8e:	e08c      	b.n	8000daa <_printf_i+0x1be>
 8000c90:	681b      	ldr	r3, [r3, #0]
 8000c92:	6011      	str	r1, [r2, #0]
 8000c94:	f010 0f40 	tst.w	r0, #64	; 0x40
 8000c98:	bf18      	it	ne
 8000c9a:	b21b      	sxthne	r3, r3
 8000c9c:	e7cf      	b.n	8000c3e <_printf_i+0x52>
 8000c9e:	6813      	ldr	r3, [r2, #0]
 8000ca0:	6825      	ldr	r5, [r4, #0]
 8000ca2:	1d18      	adds	r0, r3, #4
 8000ca4:	6010      	str	r0, [r2, #0]
 8000ca6:	0628      	lsls	r0, r5, #24
 8000ca8:	d501      	bpl.n	8000cae <_printf_i+0xc2>
 8000caa:	681b      	ldr	r3, [r3, #0]
 8000cac:	e002      	b.n	8000cb4 <_printf_i+0xc8>
 8000cae:	0668      	lsls	r0, r5, #25
 8000cb0:	d5fb      	bpl.n	8000caa <_printf_i+0xbe>
 8000cb2:	881b      	ldrh	r3, [r3, #0]
 8000cb4:	4854      	ldr	r0, [pc, #336]	; (8000e08 <_printf_i+0x21c>)
 8000cb6:	296f      	cmp	r1, #111	; 0x6f
 8000cb8:	bf14      	ite	ne
 8000cba:	220a      	movne	r2, #10
 8000cbc:	2208      	moveq	r2, #8
 8000cbe:	2100      	movs	r1, #0
 8000cc0:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8000cc4:	6865      	ldr	r5, [r4, #4]
 8000cc6:	60a5      	str	r5, [r4, #8]
 8000cc8:	2d00      	cmp	r5, #0
 8000cca:	f2c0 8095 	blt.w	8000df8 <_printf_i+0x20c>
 8000cce:	6821      	ldr	r1, [r4, #0]
 8000cd0:	f021 0104 	bic.w	r1, r1, #4
 8000cd4:	6021      	str	r1, [r4, #0]
 8000cd6:	2b00      	cmp	r3, #0
 8000cd8:	d13d      	bne.n	8000d56 <_printf_i+0x16a>
 8000cda:	2d00      	cmp	r5, #0
 8000cdc:	f040 808e 	bne.w	8000dfc <_printf_i+0x210>
 8000ce0:	4665      	mov	r5, ip
 8000ce2:	2a08      	cmp	r2, #8
 8000ce4:	d10b      	bne.n	8000cfe <_printf_i+0x112>
 8000ce6:	6823      	ldr	r3, [r4, #0]
 8000ce8:	07db      	lsls	r3, r3, #31
 8000cea:	d508      	bpl.n	8000cfe <_printf_i+0x112>
 8000cec:	6923      	ldr	r3, [r4, #16]
 8000cee:	6862      	ldr	r2, [r4, #4]
 8000cf0:	429a      	cmp	r2, r3
 8000cf2:	bfde      	ittt	le
 8000cf4:	2330      	movle	r3, #48	; 0x30
 8000cf6:	f805 3c01 	strble.w	r3, [r5, #-1]
 8000cfa:	f105 35ff 	addle.w	r5, r5, #4294967295
 8000cfe:	ebac 0305 	sub.w	r3, ip, r5
 8000d02:	6123      	str	r3, [r4, #16]
 8000d04:	f8cd 8000 	str.w	r8, [sp]
 8000d08:	463b      	mov	r3, r7
 8000d0a:	aa03      	add	r2, sp, #12
 8000d0c:	4621      	mov	r1, r4
 8000d0e:	4630      	mov	r0, r6
 8000d10:	f7ff fef6 	bl	8000b00 <_printf_common>
 8000d14:	3001      	adds	r0, #1
 8000d16:	d14d      	bne.n	8000db4 <_printf_i+0x1c8>
 8000d18:	f04f 30ff 	mov.w	r0, #4294967295
 8000d1c:	b005      	add	sp, #20
 8000d1e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8000d22:	4839      	ldr	r0, [pc, #228]	; (8000e08 <_printf_i+0x21c>)
 8000d24:	f884 1045 	strb.w	r1, [r4, #69]	; 0x45
 8000d28:	6813      	ldr	r3, [r2, #0]
 8000d2a:	6821      	ldr	r1, [r4, #0]
 8000d2c:	1d1d      	adds	r5, r3, #4
 8000d2e:	681b      	ldr	r3, [r3, #0]
 8000d30:	6015      	str	r5, [r2, #0]
 8000d32:	060a      	lsls	r2, r1, #24
 8000d34:	d50b      	bpl.n	8000d4e <_printf_i+0x162>
 8000d36:	07ca      	lsls	r2, r1, #31
 8000d38:	bf44      	itt	mi
 8000d3a:	f041 0120 	orrmi.w	r1, r1, #32
 8000d3e:	6021      	strmi	r1, [r4, #0]
 8000d40:	b91b      	cbnz	r3, 8000d4a <_printf_i+0x15e>
 8000d42:	6822      	ldr	r2, [r4, #0]
 8000d44:	f022 0220 	bic.w	r2, r2, #32
 8000d48:	6022      	str	r2, [r4, #0]
 8000d4a:	2210      	movs	r2, #16
 8000d4c:	e7b7      	b.n	8000cbe <_printf_i+0xd2>
 8000d4e:	064d      	lsls	r5, r1, #25
 8000d50:	bf48      	it	mi
 8000d52:	b29b      	uxthmi	r3, r3
 8000d54:	e7ef      	b.n	8000d36 <_printf_i+0x14a>
 8000d56:	4665      	mov	r5, ip
 8000d58:	fbb3 f1f2 	udiv	r1, r3, r2
 8000d5c:	fb02 3311 	mls	r3, r2, r1, r3
 8000d60:	5cc3      	ldrb	r3, [r0, r3]
 8000d62:	f805 3d01 	strb.w	r3, [r5, #-1]!
 8000d66:	460b      	mov	r3, r1
 8000d68:	2900      	cmp	r1, #0
 8000d6a:	d1f5      	bne.n	8000d58 <_printf_i+0x16c>
 8000d6c:	e7b9      	b.n	8000ce2 <_printf_i+0xf6>
 8000d6e:	6813      	ldr	r3, [r2, #0]
 8000d70:	6825      	ldr	r5, [r4, #0]
 8000d72:	6961      	ldr	r1, [r4, #20]
 8000d74:	1d18      	adds	r0, r3, #4
 8000d76:	6010      	str	r0, [r2, #0]
 8000d78:	0628      	lsls	r0, r5, #24
 8000d7a:	681b      	ldr	r3, [r3, #0]
 8000d7c:	d501      	bpl.n	8000d82 <_printf_i+0x196>
 8000d7e:	6019      	str	r1, [r3, #0]
 8000d80:	e002      	b.n	8000d88 <_printf_i+0x19c>
 8000d82:	066a      	lsls	r2, r5, #25
 8000d84:	d5fb      	bpl.n	8000d7e <_printf_i+0x192>
 8000d86:	8019      	strh	r1, [r3, #0]
 8000d88:	2300      	movs	r3, #0
 8000d8a:	6123      	str	r3, [r4, #16]
 8000d8c:	4665      	mov	r5, ip
 8000d8e:	e7b9      	b.n	8000d04 <_printf_i+0x118>
 8000d90:	6813      	ldr	r3, [r2, #0]
 8000d92:	1d19      	adds	r1, r3, #4
 8000d94:	6011      	str	r1, [r2, #0]
 8000d96:	681d      	ldr	r5, [r3, #0]
 8000d98:	6862      	ldr	r2, [r4, #4]
 8000d9a:	2100      	movs	r1, #0
 8000d9c:	4628      	mov	r0, r5
 8000d9e:	f7ff fa37 	bl	8000210 <memchr>
 8000da2:	b108      	cbz	r0, 8000da8 <_printf_i+0x1bc>
 8000da4:	1b40      	subs	r0, r0, r5
 8000da6:	6060      	str	r0, [r4, #4]
 8000da8:	6863      	ldr	r3, [r4, #4]
 8000daa:	6123      	str	r3, [r4, #16]
 8000dac:	2300      	movs	r3, #0
 8000dae:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000db2:	e7a7      	b.n	8000d04 <_printf_i+0x118>
 8000db4:	6923      	ldr	r3, [r4, #16]
 8000db6:	462a      	mov	r2, r5
 8000db8:	4639      	mov	r1, r7
 8000dba:	4630      	mov	r0, r6
 8000dbc:	47c0      	blx	r8
 8000dbe:	3001      	adds	r0, #1
 8000dc0:	d0aa      	beq.n	8000d18 <_printf_i+0x12c>
 8000dc2:	6823      	ldr	r3, [r4, #0]
 8000dc4:	079b      	lsls	r3, r3, #30
 8000dc6:	d413      	bmi.n	8000df0 <_printf_i+0x204>
 8000dc8:	68e0      	ldr	r0, [r4, #12]
 8000dca:	9b03      	ldr	r3, [sp, #12]
 8000dcc:	4298      	cmp	r0, r3
 8000dce:	bfb8      	it	lt
 8000dd0:	4618      	movlt	r0, r3
 8000dd2:	e7a3      	b.n	8000d1c <_printf_i+0x130>
 8000dd4:	2301      	movs	r3, #1
 8000dd6:	464a      	mov	r2, r9
 8000dd8:	4639      	mov	r1, r7
 8000dda:	4630      	mov	r0, r6
 8000ddc:	47c0      	blx	r8
 8000dde:	3001      	adds	r0, #1
 8000de0:	d09a      	beq.n	8000d18 <_printf_i+0x12c>
 8000de2:	3501      	adds	r5, #1
 8000de4:	68e3      	ldr	r3, [r4, #12]
 8000de6:	9a03      	ldr	r2, [sp, #12]
 8000de8:	1a9b      	subs	r3, r3, r2
 8000dea:	42ab      	cmp	r3, r5
 8000dec:	dcf2      	bgt.n	8000dd4 <_printf_i+0x1e8>
 8000dee:	e7eb      	b.n	8000dc8 <_printf_i+0x1dc>
 8000df0:	2500      	movs	r5, #0
 8000df2:	f104 0919 	add.w	r9, r4, #25
 8000df6:	e7f5      	b.n	8000de4 <_printf_i+0x1f8>
 8000df8:	2b00      	cmp	r3, #0
 8000dfa:	d1ac      	bne.n	8000d56 <_printf_i+0x16a>
 8000dfc:	7803      	ldrb	r3, [r0, #0]
 8000dfe:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8000e02:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000e06:	e76c      	b.n	8000ce2 <_printf_i+0xf6>
 8000e08:	08001479 	.word	0x08001479
 8000e0c:	0800148a 	.word	0x0800148a

08000e10 <_sbrk_r>:
 8000e10:	b538      	push	{r3, r4, r5, lr}
 8000e12:	4c06      	ldr	r4, [pc, #24]	; (8000e2c <_sbrk_r+0x1c>)
 8000e14:	2300      	movs	r3, #0
 8000e16:	4605      	mov	r5, r0
 8000e18:	4608      	mov	r0, r1
 8000e1a:	6023      	str	r3, [r4, #0]
 8000e1c:	f7ff fb64 	bl	80004e8 <_sbrk>
 8000e20:	1c43      	adds	r3, r0, #1
 8000e22:	d102      	bne.n	8000e2a <_sbrk_r+0x1a>
 8000e24:	6823      	ldr	r3, [r4, #0]
 8000e26:	b103      	cbz	r3, 8000e2a <_sbrk_r+0x1a>
 8000e28:	602b      	str	r3, [r5, #0]
 8000e2a:	bd38      	pop	{r3, r4, r5, pc}
 8000e2c:	200000ac 	.word	0x200000ac

08000e30 <__sread>:
 8000e30:	b510      	push	{r4, lr}
 8000e32:	460c      	mov	r4, r1
 8000e34:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000e38:	f000 fa96 	bl	8001368 <_read_r>
 8000e3c:	2800      	cmp	r0, #0
 8000e3e:	bfab      	itete	ge
 8000e40:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8000e42:	89a3      	ldrhlt	r3, [r4, #12]
 8000e44:	181b      	addge	r3, r3, r0
 8000e46:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8000e4a:	bfac      	ite	ge
 8000e4c:	6563      	strge	r3, [r4, #84]	; 0x54
 8000e4e:	81a3      	strhlt	r3, [r4, #12]
 8000e50:	bd10      	pop	{r4, pc}

08000e52 <__swrite>:
 8000e52:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000e56:	461f      	mov	r7, r3
 8000e58:	898b      	ldrh	r3, [r1, #12]
 8000e5a:	05db      	lsls	r3, r3, #23
 8000e5c:	4605      	mov	r5, r0
 8000e5e:	460c      	mov	r4, r1
 8000e60:	4616      	mov	r6, r2
 8000e62:	d505      	bpl.n	8000e70 <__swrite+0x1e>
 8000e64:	2302      	movs	r3, #2
 8000e66:	2200      	movs	r2, #0
 8000e68:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000e6c:	f000 f9b6 	bl	80011dc <_lseek_r>
 8000e70:	89a3      	ldrh	r3, [r4, #12]
 8000e72:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000e76:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000e7a:	81a3      	strh	r3, [r4, #12]
 8000e7c:	4632      	mov	r2, r6
 8000e7e:	463b      	mov	r3, r7
 8000e80:	4628      	mov	r0, r5
 8000e82:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000e86:	f000 b869 	b.w	8000f5c <_write_r>

08000e8a <__sseek>:
 8000e8a:	b510      	push	{r4, lr}
 8000e8c:	460c      	mov	r4, r1
 8000e8e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000e92:	f000 f9a3 	bl	80011dc <_lseek_r>
 8000e96:	1c43      	adds	r3, r0, #1
 8000e98:	89a3      	ldrh	r3, [r4, #12]
 8000e9a:	bf15      	itete	ne
 8000e9c:	6560      	strne	r0, [r4, #84]	; 0x54
 8000e9e:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8000ea2:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8000ea6:	81a3      	strheq	r3, [r4, #12]
 8000ea8:	bf18      	it	ne
 8000eaa:	81a3      	strhne	r3, [r4, #12]
 8000eac:	bd10      	pop	{r4, pc}

08000eae <__sclose>:
 8000eae:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000eb2:	f000 b8d3 	b.w	800105c <_close_r>
	...

08000eb8 <__swbuf_r>:
 8000eb8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000eba:	460e      	mov	r6, r1
 8000ebc:	4614      	mov	r4, r2
 8000ebe:	4605      	mov	r5, r0
 8000ec0:	b118      	cbz	r0, 8000eca <__swbuf_r+0x12>
 8000ec2:	6983      	ldr	r3, [r0, #24]
 8000ec4:	b90b      	cbnz	r3, 8000eca <__swbuf_r+0x12>
 8000ec6:	f7ff fbf9 	bl	80006bc <__sinit>
 8000eca:	4b21      	ldr	r3, [pc, #132]	; (8000f50 <__swbuf_r+0x98>)
 8000ecc:	429c      	cmp	r4, r3
 8000ece:	d12a      	bne.n	8000f26 <__swbuf_r+0x6e>
 8000ed0:	686c      	ldr	r4, [r5, #4]
 8000ed2:	69a3      	ldr	r3, [r4, #24]
 8000ed4:	60a3      	str	r3, [r4, #8]
 8000ed6:	89a3      	ldrh	r3, [r4, #12]
 8000ed8:	071a      	lsls	r2, r3, #28
 8000eda:	d52e      	bpl.n	8000f3a <__swbuf_r+0x82>
 8000edc:	6923      	ldr	r3, [r4, #16]
 8000ede:	b363      	cbz	r3, 8000f3a <__swbuf_r+0x82>
 8000ee0:	6923      	ldr	r3, [r4, #16]
 8000ee2:	6820      	ldr	r0, [r4, #0]
 8000ee4:	1ac0      	subs	r0, r0, r3
 8000ee6:	6963      	ldr	r3, [r4, #20]
 8000ee8:	b2f6      	uxtb	r6, r6
 8000eea:	4283      	cmp	r3, r0
 8000eec:	4637      	mov	r7, r6
 8000eee:	dc04      	bgt.n	8000efa <__swbuf_r+0x42>
 8000ef0:	4621      	mov	r1, r4
 8000ef2:	4628      	mov	r0, r5
 8000ef4:	f000 f948 	bl	8001188 <_fflush_r>
 8000ef8:	bb28      	cbnz	r0, 8000f46 <__swbuf_r+0x8e>
 8000efa:	68a3      	ldr	r3, [r4, #8]
 8000efc:	3b01      	subs	r3, #1
 8000efe:	60a3      	str	r3, [r4, #8]
 8000f00:	6823      	ldr	r3, [r4, #0]
 8000f02:	1c5a      	adds	r2, r3, #1
 8000f04:	6022      	str	r2, [r4, #0]
 8000f06:	701e      	strb	r6, [r3, #0]
 8000f08:	6963      	ldr	r3, [r4, #20]
 8000f0a:	3001      	adds	r0, #1
 8000f0c:	4283      	cmp	r3, r0
 8000f0e:	d004      	beq.n	8000f1a <__swbuf_r+0x62>
 8000f10:	89a3      	ldrh	r3, [r4, #12]
 8000f12:	07db      	lsls	r3, r3, #31
 8000f14:	d519      	bpl.n	8000f4a <__swbuf_r+0x92>
 8000f16:	2e0a      	cmp	r6, #10
 8000f18:	d117      	bne.n	8000f4a <__swbuf_r+0x92>
 8000f1a:	4621      	mov	r1, r4
 8000f1c:	4628      	mov	r0, r5
 8000f1e:	f000 f933 	bl	8001188 <_fflush_r>
 8000f22:	b190      	cbz	r0, 8000f4a <__swbuf_r+0x92>
 8000f24:	e00f      	b.n	8000f46 <__swbuf_r+0x8e>
 8000f26:	4b0b      	ldr	r3, [pc, #44]	; (8000f54 <__swbuf_r+0x9c>)
 8000f28:	429c      	cmp	r4, r3
 8000f2a:	d101      	bne.n	8000f30 <__swbuf_r+0x78>
 8000f2c:	68ac      	ldr	r4, [r5, #8]
 8000f2e:	e7d0      	b.n	8000ed2 <__swbuf_r+0x1a>
 8000f30:	4b09      	ldr	r3, [pc, #36]	; (8000f58 <__swbuf_r+0xa0>)
 8000f32:	429c      	cmp	r4, r3
 8000f34:	bf08      	it	eq
 8000f36:	68ec      	ldreq	r4, [r5, #12]
 8000f38:	e7cb      	b.n	8000ed2 <__swbuf_r+0x1a>
 8000f3a:	4621      	mov	r1, r4
 8000f3c:	4628      	mov	r0, r5
 8000f3e:	f000 f81f 	bl	8000f80 <__swsetup_r>
 8000f42:	2800      	cmp	r0, #0
 8000f44:	d0cc      	beq.n	8000ee0 <__swbuf_r+0x28>
 8000f46:	f04f 37ff 	mov.w	r7, #4294967295
 8000f4a:	4638      	mov	r0, r7
 8000f4c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000f4e:	bf00      	nop
 8000f50:	08001428 	.word	0x08001428
 8000f54:	08001448 	.word	0x08001448
 8000f58:	08001408 	.word	0x08001408

08000f5c <_write_r>:
 8000f5c:	b538      	push	{r3, r4, r5, lr}
 8000f5e:	4c07      	ldr	r4, [pc, #28]	; (8000f7c <_write_r+0x20>)
 8000f60:	4605      	mov	r5, r0
 8000f62:	4608      	mov	r0, r1
 8000f64:	4611      	mov	r1, r2
 8000f66:	2200      	movs	r2, #0
 8000f68:	6022      	str	r2, [r4, #0]
 8000f6a:	461a      	mov	r2, r3
 8000f6c:	f7ff fa6f 	bl	800044e <_write>
 8000f70:	1c43      	adds	r3, r0, #1
 8000f72:	d102      	bne.n	8000f7a <_write_r+0x1e>
 8000f74:	6823      	ldr	r3, [r4, #0]
 8000f76:	b103      	cbz	r3, 8000f7a <_write_r+0x1e>
 8000f78:	602b      	str	r3, [r5, #0]
 8000f7a:	bd38      	pop	{r3, r4, r5, pc}
 8000f7c:	200000ac 	.word	0x200000ac

08000f80 <__swsetup_r>:
 8000f80:	4b32      	ldr	r3, [pc, #200]	; (800104c <__swsetup_r+0xcc>)
 8000f82:	b570      	push	{r4, r5, r6, lr}
 8000f84:	681d      	ldr	r5, [r3, #0]
 8000f86:	4606      	mov	r6, r0
 8000f88:	460c      	mov	r4, r1
 8000f8a:	b125      	cbz	r5, 8000f96 <__swsetup_r+0x16>
 8000f8c:	69ab      	ldr	r3, [r5, #24]
 8000f8e:	b913      	cbnz	r3, 8000f96 <__swsetup_r+0x16>
 8000f90:	4628      	mov	r0, r5
 8000f92:	f7ff fb93 	bl	80006bc <__sinit>
 8000f96:	4b2e      	ldr	r3, [pc, #184]	; (8001050 <__swsetup_r+0xd0>)
 8000f98:	429c      	cmp	r4, r3
 8000f9a:	d10f      	bne.n	8000fbc <__swsetup_r+0x3c>
 8000f9c:	686c      	ldr	r4, [r5, #4]
 8000f9e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000fa2:	b29a      	uxth	r2, r3
 8000fa4:	0715      	lsls	r5, r2, #28
 8000fa6:	d42c      	bmi.n	8001002 <__swsetup_r+0x82>
 8000fa8:	06d0      	lsls	r0, r2, #27
 8000faa:	d411      	bmi.n	8000fd0 <__swsetup_r+0x50>
 8000fac:	2209      	movs	r2, #9
 8000fae:	6032      	str	r2, [r6, #0]
 8000fb0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000fb4:	81a3      	strh	r3, [r4, #12]
 8000fb6:	f04f 30ff 	mov.w	r0, #4294967295
 8000fba:	e03e      	b.n	800103a <__swsetup_r+0xba>
 8000fbc:	4b25      	ldr	r3, [pc, #148]	; (8001054 <__swsetup_r+0xd4>)
 8000fbe:	429c      	cmp	r4, r3
 8000fc0:	d101      	bne.n	8000fc6 <__swsetup_r+0x46>
 8000fc2:	68ac      	ldr	r4, [r5, #8]
 8000fc4:	e7eb      	b.n	8000f9e <__swsetup_r+0x1e>
 8000fc6:	4b24      	ldr	r3, [pc, #144]	; (8001058 <__swsetup_r+0xd8>)
 8000fc8:	429c      	cmp	r4, r3
 8000fca:	bf08      	it	eq
 8000fcc:	68ec      	ldreq	r4, [r5, #12]
 8000fce:	e7e6      	b.n	8000f9e <__swsetup_r+0x1e>
 8000fd0:	0751      	lsls	r1, r2, #29
 8000fd2:	d512      	bpl.n	8000ffa <__swsetup_r+0x7a>
 8000fd4:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000fd6:	b141      	cbz	r1, 8000fea <__swsetup_r+0x6a>
 8000fd8:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000fdc:	4299      	cmp	r1, r3
 8000fde:	d002      	beq.n	8000fe6 <__swsetup_r+0x66>
 8000fe0:	4630      	mov	r0, r6
 8000fe2:	f000 f973 	bl	80012cc <_free_r>
 8000fe6:	2300      	movs	r3, #0
 8000fe8:	6363      	str	r3, [r4, #52]	; 0x34
 8000fea:	89a3      	ldrh	r3, [r4, #12]
 8000fec:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8000ff0:	81a3      	strh	r3, [r4, #12]
 8000ff2:	2300      	movs	r3, #0
 8000ff4:	6063      	str	r3, [r4, #4]
 8000ff6:	6923      	ldr	r3, [r4, #16]
 8000ff8:	6023      	str	r3, [r4, #0]
 8000ffa:	89a3      	ldrh	r3, [r4, #12]
 8000ffc:	f043 0308 	orr.w	r3, r3, #8
 8001000:	81a3      	strh	r3, [r4, #12]
 8001002:	6923      	ldr	r3, [r4, #16]
 8001004:	b94b      	cbnz	r3, 800101a <__swsetup_r+0x9a>
 8001006:	89a3      	ldrh	r3, [r4, #12]
 8001008:	f403 7320 	and.w	r3, r3, #640	; 0x280
 800100c:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8001010:	d003      	beq.n	800101a <__swsetup_r+0x9a>
 8001012:	4621      	mov	r1, r4
 8001014:	4630      	mov	r0, r6
 8001016:	f000 f917 	bl	8001248 <__smakebuf_r>
 800101a:	89a2      	ldrh	r2, [r4, #12]
 800101c:	f012 0301 	ands.w	r3, r2, #1
 8001020:	d00c      	beq.n	800103c <__swsetup_r+0xbc>
 8001022:	2300      	movs	r3, #0
 8001024:	60a3      	str	r3, [r4, #8]
 8001026:	6963      	ldr	r3, [r4, #20]
 8001028:	425b      	negs	r3, r3
 800102a:	61a3      	str	r3, [r4, #24]
 800102c:	6923      	ldr	r3, [r4, #16]
 800102e:	b953      	cbnz	r3, 8001046 <__swsetup_r+0xc6>
 8001030:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001034:	f013 0080 	ands.w	r0, r3, #128	; 0x80
 8001038:	d1ba      	bne.n	8000fb0 <__swsetup_r+0x30>
 800103a:	bd70      	pop	{r4, r5, r6, pc}
 800103c:	0792      	lsls	r2, r2, #30
 800103e:	bf58      	it	pl
 8001040:	6963      	ldrpl	r3, [r4, #20]
 8001042:	60a3      	str	r3, [r4, #8]
 8001044:	e7f2      	b.n	800102c <__swsetup_r+0xac>
 8001046:	2000      	movs	r0, #0
 8001048:	e7f7      	b.n	800103a <__swsetup_r+0xba>
 800104a:	bf00      	nop
 800104c:	20000018 	.word	0x20000018
 8001050:	08001428 	.word	0x08001428
 8001054:	08001448 	.word	0x08001448
 8001058:	08001408 	.word	0x08001408

0800105c <_close_r>:
 800105c:	b538      	push	{r3, r4, r5, lr}
 800105e:	4c06      	ldr	r4, [pc, #24]	; (8001078 <_close_r+0x1c>)
 8001060:	2300      	movs	r3, #0
 8001062:	4605      	mov	r5, r0
 8001064:	4608      	mov	r0, r1
 8001066:	6023      	str	r3, [r4, #0]
 8001068:	f7ff fa0d 	bl	8000486 <_close>
 800106c:	1c43      	adds	r3, r0, #1
 800106e:	d102      	bne.n	8001076 <_close_r+0x1a>
 8001070:	6823      	ldr	r3, [r4, #0]
 8001072:	b103      	cbz	r3, 8001076 <_close_r+0x1a>
 8001074:	602b      	str	r3, [r5, #0]
 8001076:	bd38      	pop	{r3, r4, r5, pc}
 8001078:	200000ac 	.word	0x200000ac

0800107c <__sflush_r>:
 800107c:	898a      	ldrh	r2, [r1, #12]
 800107e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001082:	4605      	mov	r5, r0
 8001084:	0710      	lsls	r0, r2, #28
 8001086:	460c      	mov	r4, r1
 8001088:	d458      	bmi.n	800113c <__sflush_r+0xc0>
 800108a:	684b      	ldr	r3, [r1, #4]
 800108c:	2b00      	cmp	r3, #0
 800108e:	dc05      	bgt.n	800109c <__sflush_r+0x20>
 8001090:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8001092:	2b00      	cmp	r3, #0
 8001094:	dc02      	bgt.n	800109c <__sflush_r+0x20>
 8001096:	2000      	movs	r0, #0
 8001098:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800109c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800109e:	2e00      	cmp	r6, #0
 80010a0:	d0f9      	beq.n	8001096 <__sflush_r+0x1a>
 80010a2:	2300      	movs	r3, #0
 80010a4:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 80010a8:	682f      	ldr	r7, [r5, #0]
 80010aa:	6a21      	ldr	r1, [r4, #32]
 80010ac:	602b      	str	r3, [r5, #0]
 80010ae:	d032      	beq.n	8001116 <__sflush_r+0x9a>
 80010b0:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80010b2:	89a3      	ldrh	r3, [r4, #12]
 80010b4:	075a      	lsls	r2, r3, #29
 80010b6:	d505      	bpl.n	80010c4 <__sflush_r+0x48>
 80010b8:	6863      	ldr	r3, [r4, #4]
 80010ba:	1ac0      	subs	r0, r0, r3
 80010bc:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80010be:	b10b      	cbz	r3, 80010c4 <__sflush_r+0x48>
 80010c0:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80010c2:	1ac0      	subs	r0, r0, r3
 80010c4:	2300      	movs	r3, #0
 80010c6:	4602      	mov	r2, r0
 80010c8:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80010ca:	6a21      	ldr	r1, [r4, #32]
 80010cc:	4628      	mov	r0, r5
 80010ce:	47b0      	blx	r6
 80010d0:	1c43      	adds	r3, r0, #1
 80010d2:	89a3      	ldrh	r3, [r4, #12]
 80010d4:	d106      	bne.n	80010e4 <__sflush_r+0x68>
 80010d6:	6829      	ldr	r1, [r5, #0]
 80010d8:	291d      	cmp	r1, #29
 80010da:	d848      	bhi.n	800116e <__sflush_r+0xf2>
 80010dc:	4a29      	ldr	r2, [pc, #164]	; (8001184 <__sflush_r+0x108>)
 80010de:	40ca      	lsrs	r2, r1
 80010e0:	07d6      	lsls	r6, r2, #31
 80010e2:	d544      	bpl.n	800116e <__sflush_r+0xf2>
 80010e4:	2200      	movs	r2, #0
 80010e6:	6062      	str	r2, [r4, #4]
 80010e8:	04d9      	lsls	r1, r3, #19
 80010ea:	6922      	ldr	r2, [r4, #16]
 80010ec:	6022      	str	r2, [r4, #0]
 80010ee:	d504      	bpl.n	80010fa <__sflush_r+0x7e>
 80010f0:	1c42      	adds	r2, r0, #1
 80010f2:	d101      	bne.n	80010f8 <__sflush_r+0x7c>
 80010f4:	682b      	ldr	r3, [r5, #0]
 80010f6:	b903      	cbnz	r3, 80010fa <__sflush_r+0x7e>
 80010f8:	6560      	str	r0, [r4, #84]	; 0x54
 80010fa:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80010fc:	602f      	str	r7, [r5, #0]
 80010fe:	2900      	cmp	r1, #0
 8001100:	d0c9      	beq.n	8001096 <__sflush_r+0x1a>
 8001102:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8001106:	4299      	cmp	r1, r3
 8001108:	d002      	beq.n	8001110 <__sflush_r+0x94>
 800110a:	4628      	mov	r0, r5
 800110c:	f000 f8de 	bl	80012cc <_free_r>
 8001110:	2000      	movs	r0, #0
 8001112:	6360      	str	r0, [r4, #52]	; 0x34
 8001114:	e7c0      	b.n	8001098 <__sflush_r+0x1c>
 8001116:	2301      	movs	r3, #1
 8001118:	4628      	mov	r0, r5
 800111a:	47b0      	blx	r6
 800111c:	1c41      	adds	r1, r0, #1
 800111e:	d1c8      	bne.n	80010b2 <__sflush_r+0x36>
 8001120:	682b      	ldr	r3, [r5, #0]
 8001122:	2b00      	cmp	r3, #0
 8001124:	d0c5      	beq.n	80010b2 <__sflush_r+0x36>
 8001126:	2b1d      	cmp	r3, #29
 8001128:	d001      	beq.n	800112e <__sflush_r+0xb2>
 800112a:	2b16      	cmp	r3, #22
 800112c:	d101      	bne.n	8001132 <__sflush_r+0xb6>
 800112e:	602f      	str	r7, [r5, #0]
 8001130:	e7b1      	b.n	8001096 <__sflush_r+0x1a>
 8001132:	89a3      	ldrh	r3, [r4, #12]
 8001134:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001138:	81a3      	strh	r3, [r4, #12]
 800113a:	e7ad      	b.n	8001098 <__sflush_r+0x1c>
 800113c:	690f      	ldr	r7, [r1, #16]
 800113e:	2f00      	cmp	r7, #0
 8001140:	d0a9      	beq.n	8001096 <__sflush_r+0x1a>
 8001142:	0793      	lsls	r3, r2, #30
 8001144:	680e      	ldr	r6, [r1, #0]
 8001146:	bf08      	it	eq
 8001148:	694b      	ldreq	r3, [r1, #20]
 800114a:	600f      	str	r7, [r1, #0]
 800114c:	bf18      	it	ne
 800114e:	2300      	movne	r3, #0
 8001150:	eba6 0807 	sub.w	r8, r6, r7
 8001154:	608b      	str	r3, [r1, #8]
 8001156:	f1b8 0f00 	cmp.w	r8, #0
 800115a:	dd9c      	ble.n	8001096 <__sflush_r+0x1a>
 800115c:	4643      	mov	r3, r8
 800115e:	463a      	mov	r2, r7
 8001160:	6a21      	ldr	r1, [r4, #32]
 8001162:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8001164:	4628      	mov	r0, r5
 8001166:	47b0      	blx	r6
 8001168:	2800      	cmp	r0, #0
 800116a:	dc06      	bgt.n	800117a <__sflush_r+0xfe>
 800116c:	89a3      	ldrh	r3, [r4, #12]
 800116e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001172:	81a3      	strh	r3, [r4, #12]
 8001174:	f04f 30ff 	mov.w	r0, #4294967295
 8001178:	e78e      	b.n	8001098 <__sflush_r+0x1c>
 800117a:	4407      	add	r7, r0
 800117c:	eba8 0800 	sub.w	r8, r8, r0
 8001180:	e7e9      	b.n	8001156 <__sflush_r+0xda>
 8001182:	bf00      	nop
 8001184:	20400001 	.word	0x20400001

08001188 <_fflush_r>:
 8001188:	b538      	push	{r3, r4, r5, lr}
 800118a:	690b      	ldr	r3, [r1, #16]
 800118c:	4605      	mov	r5, r0
 800118e:	460c      	mov	r4, r1
 8001190:	b1db      	cbz	r3, 80011ca <_fflush_r+0x42>
 8001192:	b118      	cbz	r0, 800119c <_fflush_r+0x14>
 8001194:	6983      	ldr	r3, [r0, #24]
 8001196:	b90b      	cbnz	r3, 800119c <_fflush_r+0x14>
 8001198:	f7ff fa90 	bl	80006bc <__sinit>
 800119c:	4b0c      	ldr	r3, [pc, #48]	; (80011d0 <_fflush_r+0x48>)
 800119e:	429c      	cmp	r4, r3
 80011a0:	d109      	bne.n	80011b6 <_fflush_r+0x2e>
 80011a2:	686c      	ldr	r4, [r5, #4]
 80011a4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80011a8:	b17b      	cbz	r3, 80011ca <_fflush_r+0x42>
 80011aa:	4621      	mov	r1, r4
 80011ac:	4628      	mov	r0, r5
 80011ae:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80011b2:	f7ff bf63 	b.w	800107c <__sflush_r>
 80011b6:	4b07      	ldr	r3, [pc, #28]	; (80011d4 <_fflush_r+0x4c>)
 80011b8:	429c      	cmp	r4, r3
 80011ba:	d101      	bne.n	80011c0 <_fflush_r+0x38>
 80011bc:	68ac      	ldr	r4, [r5, #8]
 80011be:	e7f1      	b.n	80011a4 <_fflush_r+0x1c>
 80011c0:	4b05      	ldr	r3, [pc, #20]	; (80011d8 <_fflush_r+0x50>)
 80011c2:	429c      	cmp	r4, r3
 80011c4:	bf08      	it	eq
 80011c6:	68ec      	ldreq	r4, [r5, #12]
 80011c8:	e7ec      	b.n	80011a4 <_fflush_r+0x1c>
 80011ca:	2000      	movs	r0, #0
 80011cc:	bd38      	pop	{r3, r4, r5, pc}
 80011ce:	bf00      	nop
 80011d0:	08001428 	.word	0x08001428
 80011d4:	08001448 	.word	0x08001448
 80011d8:	08001408 	.word	0x08001408

080011dc <_lseek_r>:
 80011dc:	b538      	push	{r3, r4, r5, lr}
 80011de:	4c07      	ldr	r4, [pc, #28]	; (80011fc <_lseek_r+0x20>)
 80011e0:	4605      	mov	r5, r0
 80011e2:	4608      	mov	r0, r1
 80011e4:	4611      	mov	r1, r2
 80011e6:	2200      	movs	r2, #0
 80011e8:	6022      	str	r2, [r4, #0]
 80011ea:	461a      	mov	r2, r3
 80011ec:	f7ff f96f 	bl	80004ce <_lseek>
 80011f0:	1c43      	adds	r3, r0, #1
 80011f2:	d102      	bne.n	80011fa <_lseek_r+0x1e>
 80011f4:	6823      	ldr	r3, [r4, #0]
 80011f6:	b103      	cbz	r3, 80011fa <_lseek_r+0x1e>
 80011f8:	602b      	str	r3, [r5, #0]
 80011fa:	bd38      	pop	{r3, r4, r5, pc}
 80011fc:	200000ac 	.word	0x200000ac

08001200 <__swhatbuf_r>:
 8001200:	b570      	push	{r4, r5, r6, lr}
 8001202:	460e      	mov	r6, r1
 8001204:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001208:	2900      	cmp	r1, #0
 800120a:	b096      	sub	sp, #88	; 0x58
 800120c:	4614      	mov	r4, r2
 800120e:	461d      	mov	r5, r3
 8001210:	da07      	bge.n	8001222 <__swhatbuf_r+0x22>
 8001212:	2300      	movs	r3, #0
 8001214:	602b      	str	r3, [r5, #0]
 8001216:	89b3      	ldrh	r3, [r6, #12]
 8001218:	061a      	lsls	r2, r3, #24
 800121a:	d410      	bmi.n	800123e <__swhatbuf_r+0x3e>
 800121c:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8001220:	e00e      	b.n	8001240 <__swhatbuf_r+0x40>
 8001222:	466a      	mov	r2, sp
 8001224:	f000 f8b2 	bl	800138c <_fstat_r>
 8001228:	2800      	cmp	r0, #0
 800122a:	dbf2      	blt.n	8001212 <__swhatbuf_r+0x12>
 800122c:	9a01      	ldr	r2, [sp, #4]
 800122e:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8001232:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8001236:	425a      	negs	r2, r3
 8001238:	415a      	adcs	r2, r3
 800123a:	602a      	str	r2, [r5, #0]
 800123c:	e7ee      	b.n	800121c <__swhatbuf_r+0x1c>
 800123e:	2340      	movs	r3, #64	; 0x40
 8001240:	2000      	movs	r0, #0
 8001242:	6023      	str	r3, [r4, #0]
 8001244:	b016      	add	sp, #88	; 0x58
 8001246:	bd70      	pop	{r4, r5, r6, pc}

08001248 <__smakebuf_r>:
 8001248:	898b      	ldrh	r3, [r1, #12]
 800124a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800124c:	079d      	lsls	r5, r3, #30
 800124e:	4606      	mov	r6, r0
 8001250:	460c      	mov	r4, r1
 8001252:	d507      	bpl.n	8001264 <__smakebuf_r+0x1c>
 8001254:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8001258:	6023      	str	r3, [r4, #0]
 800125a:	6123      	str	r3, [r4, #16]
 800125c:	2301      	movs	r3, #1
 800125e:	6163      	str	r3, [r4, #20]
 8001260:	b002      	add	sp, #8
 8001262:	bd70      	pop	{r4, r5, r6, pc}
 8001264:	ab01      	add	r3, sp, #4
 8001266:	466a      	mov	r2, sp
 8001268:	f7ff ffca 	bl	8001200 <__swhatbuf_r>
 800126c:	9900      	ldr	r1, [sp, #0]
 800126e:	4605      	mov	r5, r0
 8001270:	4630      	mov	r0, r6
 8001272:	f7ff faad 	bl	80007d0 <_malloc_r>
 8001276:	b948      	cbnz	r0, 800128c <__smakebuf_r+0x44>
 8001278:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800127c:	059a      	lsls	r2, r3, #22
 800127e:	d4ef      	bmi.n	8001260 <__smakebuf_r+0x18>
 8001280:	f023 0303 	bic.w	r3, r3, #3
 8001284:	f043 0302 	orr.w	r3, r3, #2
 8001288:	81a3      	strh	r3, [r4, #12]
 800128a:	e7e3      	b.n	8001254 <__smakebuf_r+0xc>
 800128c:	4b0d      	ldr	r3, [pc, #52]	; (80012c4 <__smakebuf_r+0x7c>)
 800128e:	62b3      	str	r3, [r6, #40]	; 0x28
 8001290:	89a3      	ldrh	r3, [r4, #12]
 8001292:	6020      	str	r0, [r4, #0]
 8001294:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001298:	81a3      	strh	r3, [r4, #12]
 800129a:	9b00      	ldr	r3, [sp, #0]
 800129c:	6163      	str	r3, [r4, #20]
 800129e:	9b01      	ldr	r3, [sp, #4]
 80012a0:	6120      	str	r0, [r4, #16]
 80012a2:	b15b      	cbz	r3, 80012bc <__smakebuf_r+0x74>
 80012a4:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80012a8:	4630      	mov	r0, r6
 80012aa:	f000 f881 	bl	80013b0 <_isatty_r>
 80012ae:	b128      	cbz	r0, 80012bc <__smakebuf_r+0x74>
 80012b0:	89a3      	ldrh	r3, [r4, #12]
 80012b2:	f023 0303 	bic.w	r3, r3, #3
 80012b6:	f043 0301 	orr.w	r3, r3, #1
 80012ba:	81a3      	strh	r3, [r4, #12]
 80012bc:	89a3      	ldrh	r3, [r4, #12]
 80012be:	431d      	orrs	r5, r3
 80012c0:	81a5      	strh	r5, [r4, #12]
 80012c2:	e7cd      	b.n	8001260 <__smakebuf_r+0x18>
 80012c4:	08000685 	.word	0x08000685

080012c8 <__malloc_lock>:
 80012c8:	4770      	bx	lr

080012ca <__malloc_unlock>:
 80012ca:	4770      	bx	lr

080012cc <_free_r>:
 80012cc:	b538      	push	{r3, r4, r5, lr}
 80012ce:	4605      	mov	r5, r0
 80012d0:	2900      	cmp	r1, #0
 80012d2:	d045      	beq.n	8001360 <_free_r+0x94>
 80012d4:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80012d8:	1f0c      	subs	r4, r1, #4
 80012da:	2b00      	cmp	r3, #0
 80012dc:	bfb8      	it	lt
 80012de:	18e4      	addlt	r4, r4, r3
 80012e0:	f7ff fff2 	bl	80012c8 <__malloc_lock>
 80012e4:	4a1f      	ldr	r2, [pc, #124]	; (8001364 <_free_r+0x98>)
 80012e6:	6813      	ldr	r3, [r2, #0]
 80012e8:	4610      	mov	r0, r2
 80012ea:	b933      	cbnz	r3, 80012fa <_free_r+0x2e>
 80012ec:	6063      	str	r3, [r4, #4]
 80012ee:	6014      	str	r4, [r2, #0]
 80012f0:	4628      	mov	r0, r5
 80012f2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80012f6:	f7ff bfe8 	b.w	80012ca <__malloc_unlock>
 80012fa:	42a3      	cmp	r3, r4
 80012fc:	d90c      	bls.n	8001318 <_free_r+0x4c>
 80012fe:	6821      	ldr	r1, [r4, #0]
 8001300:	1862      	adds	r2, r4, r1
 8001302:	4293      	cmp	r3, r2
 8001304:	bf04      	itt	eq
 8001306:	681a      	ldreq	r2, [r3, #0]
 8001308:	685b      	ldreq	r3, [r3, #4]
 800130a:	6063      	str	r3, [r4, #4]
 800130c:	bf04      	itt	eq
 800130e:	1852      	addeq	r2, r2, r1
 8001310:	6022      	streq	r2, [r4, #0]
 8001312:	6004      	str	r4, [r0, #0]
 8001314:	e7ec      	b.n	80012f0 <_free_r+0x24>
 8001316:	4613      	mov	r3, r2
 8001318:	685a      	ldr	r2, [r3, #4]
 800131a:	b10a      	cbz	r2, 8001320 <_free_r+0x54>
 800131c:	42a2      	cmp	r2, r4
 800131e:	d9fa      	bls.n	8001316 <_free_r+0x4a>
 8001320:	6819      	ldr	r1, [r3, #0]
 8001322:	1858      	adds	r0, r3, r1
 8001324:	42a0      	cmp	r0, r4
 8001326:	d10b      	bne.n	8001340 <_free_r+0x74>
 8001328:	6820      	ldr	r0, [r4, #0]
 800132a:	4401      	add	r1, r0
 800132c:	1858      	adds	r0, r3, r1
 800132e:	4282      	cmp	r2, r0
 8001330:	6019      	str	r1, [r3, #0]
 8001332:	d1dd      	bne.n	80012f0 <_free_r+0x24>
 8001334:	6810      	ldr	r0, [r2, #0]
 8001336:	6852      	ldr	r2, [r2, #4]
 8001338:	605a      	str	r2, [r3, #4]
 800133a:	4401      	add	r1, r0
 800133c:	6019      	str	r1, [r3, #0]
 800133e:	e7d7      	b.n	80012f0 <_free_r+0x24>
 8001340:	d902      	bls.n	8001348 <_free_r+0x7c>
 8001342:	230c      	movs	r3, #12
 8001344:	602b      	str	r3, [r5, #0]
 8001346:	e7d3      	b.n	80012f0 <_free_r+0x24>
 8001348:	6820      	ldr	r0, [r4, #0]
 800134a:	1821      	adds	r1, r4, r0
 800134c:	428a      	cmp	r2, r1
 800134e:	bf04      	itt	eq
 8001350:	6811      	ldreq	r1, [r2, #0]
 8001352:	6852      	ldreq	r2, [r2, #4]
 8001354:	6062      	str	r2, [r4, #4]
 8001356:	bf04      	itt	eq
 8001358:	1809      	addeq	r1, r1, r0
 800135a:	6021      	streq	r1, [r4, #0]
 800135c:	605c      	str	r4, [r3, #4]
 800135e:	e7c7      	b.n	80012f0 <_free_r+0x24>
 8001360:	bd38      	pop	{r3, r4, r5, pc}
 8001362:	bf00      	nop
 8001364:	200000a4 	.word	0x200000a4

08001368 <_read_r>:
 8001368:	b538      	push	{r3, r4, r5, lr}
 800136a:	4c07      	ldr	r4, [pc, #28]	; (8001388 <_read_r+0x20>)
 800136c:	4605      	mov	r5, r0
 800136e:	4608      	mov	r0, r1
 8001370:	4611      	mov	r1, r2
 8001372:	2200      	movs	r2, #0
 8001374:	6022      	str	r2, [r4, #0]
 8001376:	461a      	mov	r2, r3
 8001378:	f7ff f84c 	bl	8000414 <_read>
 800137c:	1c43      	adds	r3, r0, #1
 800137e:	d102      	bne.n	8001386 <_read_r+0x1e>
 8001380:	6823      	ldr	r3, [r4, #0]
 8001382:	b103      	cbz	r3, 8001386 <_read_r+0x1e>
 8001384:	602b      	str	r3, [r5, #0]
 8001386:	bd38      	pop	{r3, r4, r5, pc}
 8001388:	200000ac 	.word	0x200000ac

0800138c <_fstat_r>:
 800138c:	b538      	push	{r3, r4, r5, lr}
 800138e:	4c07      	ldr	r4, [pc, #28]	; (80013ac <_fstat_r+0x20>)
 8001390:	2300      	movs	r3, #0
 8001392:	4605      	mov	r5, r0
 8001394:	4608      	mov	r0, r1
 8001396:	4611      	mov	r1, r2
 8001398:	6023      	str	r3, [r4, #0]
 800139a:	f7ff f87f 	bl	800049c <_fstat>
 800139e:	1c43      	adds	r3, r0, #1
 80013a0:	d102      	bne.n	80013a8 <_fstat_r+0x1c>
 80013a2:	6823      	ldr	r3, [r4, #0]
 80013a4:	b103      	cbz	r3, 80013a8 <_fstat_r+0x1c>
 80013a6:	602b      	str	r3, [r5, #0]
 80013a8:	bd38      	pop	{r3, r4, r5, pc}
 80013aa:	bf00      	nop
 80013ac:	200000ac 	.word	0x200000ac

080013b0 <_isatty_r>:
 80013b0:	b538      	push	{r3, r4, r5, lr}
 80013b2:	4c06      	ldr	r4, [pc, #24]	; (80013cc <_isatty_r+0x1c>)
 80013b4:	2300      	movs	r3, #0
 80013b6:	4605      	mov	r5, r0
 80013b8:	4608      	mov	r0, r1
 80013ba:	6023      	str	r3, [r4, #0]
 80013bc:	f7ff f87d 	bl	80004ba <_isatty>
 80013c0:	1c43      	adds	r3, r0, #1
 80013c2:	d102      	bne.n	80013ca <_isatty_r+0x1a>
 80013c4:	6823      	ldr	r3, [r4, #0]
 80013c6:	b103      	cbz	r3, 80013ca <_isatty_r+0x1a>
 80013c8:	602b      	str	r3, [r5, #0]
 80013ca:	bd38      	pop	{r3, r4, r5, pc}
 80013cc:	200000ac 	.word	0x200000ac

080013d0 <_init>:
 80013d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80013d2:	bf00      	nop
 80013d4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80013d6:	bc08      	pop	{r3}
 80013d8:	469e      	mov	lr, r3
 80013da:	4770      	bx	lr

080013dc <_fini>:
 80013dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80013de:	bf00      	nop
 80013e0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80013e2:	bc08      	pop	{r3}
 80013e4:	469e      	mov	lr, r3
 80013e6:	4770      	bx	lr
